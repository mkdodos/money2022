{"version":3,"sources":["utils/firebase.js","contexts/AuthContext.js","Header.js","utils/numberFormat.js","components/Accounts.js","pages/Cates/components/List.js","pages/Cates/index.js","components/TicTacToe.js","pages/Balances/components/ItemList.js","pages/Balances/components/EditForm.js","pages/Balances/components/Accounts.js","pages/Balances/index.js","pages/Cates/components/EditCate.js","components/AutoTableFirebase.js","pages/Stocks.js","contexts/BookContext.js","contexts/FirebaseBookContext.js","components/BookList.js","components/StockList.js","components/BookForm.js","services/ContactService.js","components/contacts/ContactList.js","components/Books.js","demo/contacts/ContactService.js","img/spin.gif","components/Spinner.js","demo/contacts/ContactList.js","demo/contacts/ViewContact.js","demo/contacts/AddContact.js","components/Login.js","components/PrivateRoute.js","components/MonthSelect.js","components/Dashboard.js","pages/Balances2/Balances2.js","components/EmpBasic.js","pages/Scores/components/Circle.js","pages/Scores/components/Board.js","pages/Scores/components/List.js","pages/Scores/Scores.js","components/Routes.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Header","activeItem","setActiveItem","history","useHistory","handleClick","e","name","push","Menu","secondary","pointing","Item","as","Link","to","onClick","active","Dropdown","item","icon","position","Icon","numberFormat","total","Intl","NumberFormat","currency","format","Accounts","defalutItem","prior","balance","rows","setRows","row","setRow","setTotal","editedIndex","setEditedIndex","modalOpen","setModalOpen","dbCol","collection","indexOf","handleChange","target","where","get","then","snapshot","temp","data","docs","map","doc","id","parseInt","_","sortBy","slice","reverse","console","log","Modal","open","closeIcon","onClose","Content","Form","Field","placeholder","onChange","type","Actions","Button","floated","color","delete","filter","obj","primary","update","newItemList","Object","assign","add","Segment","textAlign","Statistic","inverted","Value","Table","unstackable","Row","text","i","HeaderCell","Body","Cell","List","schema","header","Cates","orderBy","Square","className","this","props","Component","TicTacToe","state","squares","Array","fill","squaresCopy","setState","Grid","Column","renderSquare","ItemList","cates","rowsCopy","setItem","setItemCopy","setOpen","activeAccount","setIsIncome","setIsIncomeOrigin","isIncome","setCate","search","setSearch","columns","Input","fluid","title","toLowerCase","includes","Select","selection","label","options","cate","prev","editedRow","date","income","amt","expense","handleEdit","Label","account","circular","EditForm","setRowsCopy","rowsAccount","setRowsAccount","setActiveAccount","itemCopy","isIncomeOrigin","updateBalance","index","newRows","handleItemClick","widths","key","accountClick","Balances","Date","toISOString","setCates","colCates","d","limit","yyyy","getFullYear","mm","getMonth","data2","horizontal","verticalAlign","EditCate","useParams","exists","catch","error","onSubmit","Number","AutoTable","itemList","setItemList","collectionName","now","confirm","edit","dataRow","MyTable","href","Stocks","qty","price","cost","FirebaseBookContext","FirebaseBookContextProvider","setBooks","books","editedBook","setEditedBook","removeBook","book","editBook","updateBook","saveBook","openForm","closeForm","BookList","length","author","NewBookForm","setTitle","setAuthor","ContactService","serverURL","ContactList","contacts","errorMessage","response","getAllContacts","JSON","stringify","Books","StockList","dataURL","axios","contactId","contact","post","put","Spinner","src","spinImg","style","width","ViewContact","getContact","AddContact","handleSave","UpdateContact","handleDelete","DeleteContact","Login","emailRef","useRef","passwordRef","setError","preventDefault","current","Card","size","ref","defaultValue","extra","PrivateRoute","component","rest","render","MonthButton","onMinusClick","onDoubleClick","onPlusClick","Dashboard","useReducer","action","column","direction","dataCopy","Error","dispatch","month","setMonth","calTotal","arr","filterdData","celled","sortable","sorted","Balances2","accountOptions","setAccountOptions","cateOptions","setCateOptions","filters","setFilters","defaultRow","setEditedRow","getBalancesData","getAccountsData","getCatesData","handleInputChange","clearable","striped","EmpBasic","res","Circle","num","backgroundColor","outline","height","borderRadius","border","Board","score","year","setYear","onYearClick","setSelectedRow","basic","advance","Scores","styleGrid","display","gridTemplateColumns","gridTemplateRows","gap","justifyContent","marginBottom","rowDetailsBasic","setRowDetailsBasic","rowDetailsAdvance","setRowDetailsAdvance","setScore","scoreAdvance","setScoreAdvance","seletedRow","dbColScores","dbColScoreDetails","y","calScoreAdvance","newScores","correct","Loader","inline","sn","Routes","path","exact","App","Container","container","document","getElementById","ReactDom"],"mappings":"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","file":"static/js/main.e79d8953.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDUSJ5yzHvTCCSQTuONsPtOBGodjamReHc\",\r\n  authDomain: \"money2022-173b9.firebaseapp.com\",\r\n  projectId: \"money2022-173b9\",\r\n  storageBucket: \"money2022-173b9.appspot.com\",\r\n  messagingSenderId: \"944583877759\",\r\n  appId: \"1:944583877759:web:0fd8a43af8a727a76c0b4a\"\r\n};\r\n\r\nconst firebaseConfig_dada = {\r\n  apiKey: 'AIzaSyBKVsNm8RP9VKYBgEwmyRQsitx9dncLuaI',\r\n  authDomain: 'social-cool-f16ba.firebaseapp.com',\r\n  projectId: 'social-cool-f16ba',\r\n  storageBucket: 'social-cool-f16ba.appspot.com',\r\n  messagingSenderId: '578558980743',\r\n  appId: '1:578558980743:web:4668ba80e8df3c24087e22',\r\n};\r\n\r\n\r\n// const secondaryApp = firebase.initializeApp(secondaryAppConfig, \"secondary\");\r\n\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\n\r\nconst app_dada = firebase.initializeApp(firebaseConfig_dada,\"dada\");\r\nconst db_dada = app_dada.firestore();\r\n\r\n\r\nconst auth = app.auth();\r\n\r\n// export default firebase;\r\nexport { db,db_dada, auth };\r\n","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../utils/firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n      {/* {children} */}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React from 'react';\r\nimport {\r\n  Menu,\r\n  Icon,\r\n  Image,\r\n  Dropdown,\r\n  Container,\r\n  Sticky,\r\n} from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// import { useAuth } from './contexts/AuthContext';\r\nimport { useAuth } from './contexts/AuthContext';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Header() {\r\n  const [activeItem, setActiveItem] = React.useState('');\r\n\r\n  const { currentUser, logout } = useAuth();\r\n\r\n  const history = useHistory();\r\n  function handleClick(e, { name }) {\r\n    setActiveItem(name);\r\n  }\r\n\r\n  async function handleLogout() {\r\n    // setError(\"\")\r\n\r\n    try {\r\n      await logout();\r\n      history.push('/login');\r\n    } catch {\r\n      // setError(\"Failed to log out\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Menu secondary pointing>\r\n      {/* <Menu.Item as={Link} to=\"/tictactoe\">\r\n        TicTacToe\r\n      </Menu.Item> */}\r\n\r\n     \r\n\r\n      {/* <Menu.Item\r\n        as={Link}\r\n        to=\"/accounts\"\r\n        name=\"accounts\"\r\n        onClick={handleClick}\r\n        active={activeItem === 'accounts'}\r\n      >\r\n        帳戶\r\n      </Menu.Item> */}\r\n      {/* <Menu.Item\r\n        as={Link}\r\n        to=\"/cates\"\r\n        name=\"cates\"\r\n        onClick={handleClick}\r\n        active={activeItem === 'cates'}\r\n      >\r\n        類別\r\n      </Menu.Item> */}\r\n\r\n     \r\n\r\n      {currentUser?.email == 'mkdodos@gmail.com' && (\r\n        <Menu.Item\r\n          as={Link}\r\n          to=\"/stocks\"\r\n          name=\"stocks\"\r\n          onClick={handleClick}\r\n          active={activeItem === 'stocks'}\r\n        >\r\n          股票\r\n        </Menu.Item>\r\n      )}\r\n\r\n      <Menu.Item\r\n        as={Link}\r\n        to=\"/dashboard\"\r\n        name=\"dashboard\"\r\n        onClick={handleClick}\r\n        active={activeItem === 'dashboard'}\r\n      >\r\n        統計\r\n      </Menu.Item>\r\n\r\n      <Menu.Item\r\n        as={Link}\r\n        to=\"/scores\"\r\n        name=\"scores\"\r\n        onClick={handleClick}\r\n        active={activeItem === 'scores'}\r\n      >\r\n        分數\r\n      </Menu.Item>\r\n\r\n      <Menu.Item\r\n        as={Link}\r\n        to=\"/balances\"\r\n        name=\"balances\"\r\n        onClick={handleClick}\r\n        active={activeItem === 'balances'}\r\n      >\r\n        收支\r\n      </Menu.Item>\r\n\r\n      <Dropdown item icon=\"setting\">\r\n        <Dropdown.Menu>\r\n          {/* <Dropdown.Item>\r\n            <Icon name='dropdown' />\r\n            <span className='text'>New</span>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item>Document</Dropdown.Item>\r\n              <Dropdown.Item>Image</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown.Item> */}\r\n         \r\n         <Dropdown.Item as={Link} to=\"/accounts\" name=\"accounts\">\r\n            帳戶\r\n          </Dropdown.Item>\r\n          <Dropdown.Item as={Link} to=\"/cates\">\r\n            類別\r\n          </Dropdown.Item>\r\n         \r\n          {/* <Dropdown.Item>Edit Permissions</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Header>Export</Dropdown.Header>\r\n          <Dropdown.Item>Share</Dropdown.Item> */}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n\r\n\r\n\r\n      <Menu.Menu position=\"right\">\r\n        {currentUser ? (\r\n          <Menu.Item name=\"\" onClick={handleLogout}>\r\n            <Icon name=\"sign-out\" />\r\n          </Menu.Item>\r\n        ) : (\r\n          <Menu.Item name=\"login\" as={Link} to=\"/login\">\r\n            Login\r\n          </Menu.Item>\r\n        )}\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n}\r\n","const numberFormat = (total) => {\r\n  var formatter = new Intl.NumberFormat(\"en-US\", {\r\n    currency: \"USD\", // 2,500\r\n   /* style: \"currency\"  $2,500.00 */\r\n  });\r\n  return formatter.format(total);\r\n};\r\n\r\nexport default numberFormat ;\r\n","import { db } from '../utils/firebase';\r\n// import {db as dada} from '../utils/firebase-dada'\r\nimport { Table, Form, Button, Modal, Tab , Segment,Statistic} from 'semantic-ui-react';\r\nimport DataTable from './DataTable';\r\nimport DataRow from './DataRow';\r\nimport React, { useState } from 'react';\r\nimport EditForm from './EditForm';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport numberFormat from '../utils/numberFormat';\r\n\r\nimport _ from 'lodash'\r\n\r\nexport default function Accounts() {\r\n  const { currentUser } = useAuth();\r\n  const schema = [\r\n    // { text: '名稱', value: 'id', type: 'string' },\r\n    { text: '名稱', value: 'name', type: 'string' },\r\n    { text: '順序', value: 'prior', type: 'number' },\r\n    { text: '餘額', value: 'balance', type: 'number' },\r\n  ];\r\n  const defalutItem = { name: '', prior: '', balance: '' };\r\n  const [rows, setRows] = React.useState([]);\r\n  const [row, setRow] = React.useState(defalutItem);\r\n\r\n  const [total, setTotal] = React.useState(0);\r\n\r\n  // 用來判斷新增或修改,還有修改後將資料更新回該列\r\n  const [editedIndex, setEditedIndex] = useState(-1);\r\n\r\n  // 控制 Modal 顯示\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const dbCol = db.collection('accounts');\r\n  React.useEffect(() => {\r\n    dbCol\r\n      // .orderBy('balance','desc')\r\n      .where('user', '==', currentUser.email)\r\n      .get()\r\n      .then((snapshot) => {\r\n        let temp = 0 ;\r\n        let data = snapshot.docs.map((doc) => {\r\n          temp += doc.data().balance * 1;\r\n          return { ...doc.data(), id: doc.id, \r\n            // 將金額字串轉為數字才能正確做排序\r\n          balance: parseInt(doc.data().balance),\r\n         };\r\n        });\r\n        data = _.sortBy(data,'balance')\r\n        // data = data.reverse()\r\n        data = data.slice().reverse()\r\n        setRows(data);\r\n        console.log(temp)\r\n        setTotal(temp)\r\n        // setRows(\r\n        //   snapshot.docs.map((doc) => {\r\n        //     return { ...doc.data(), id: doc.id };\r\n        //   })\r\n        // );\r\n      });\r\n  }, []);\r\n\r\n  // 儲存\r\n  function handleSave() {\r\n    const { name, balance, prior } = row;\r\n    if (editedIndex > -1) {\r\n      dbCol\r\n        // db.collection('accounts2')\r\n        .doc(row.id)\r\n        .update({ name, balance, prior })\r\n        .then(() => {\r\n          let newItemList = rows.slice();\r\n          Object.assign(newItemList[editedIndex], row);\r\n          setRows(newItemList);\r\n          setModalOpen(false);\r\n          setRow(defalutItem);\r\n        });\r\n    } else {\r\n      dbCol\r\n        .add({ name, balance, prior, user: currentUser.email })\r\n        .then((doc) => {\r\n          setModalOpen(false);\r\n          setRow(defalutItem);\r\n          setRows([...rows, { ...row, id: doc.id }]);\r\n        });\r\n    }\r\n  }\r\n\r\n  function handleClick(row) {\r\n    setEditedIndex(rows.indexOf(row));\r\n    setRow(row);\r\n    setModalOpen(true);\r\n    // console.log(row);\r\n  }\r\n\r\n  function renderRow(row, i) {\r\n    return (\r\n      <DataRow key={i} row={row} value={i} onClick={() => handleClick(row)} />\r\n    );\r\n  }\r\n\r\n  function handleChange(e) {\r\n    setRow({ ...row, [e.target.name]: e.target.value });\r\n    // setRow({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  function handleAdd() {\r\n    setEditedIndex(-1);\r\n    setModalOpen(true);\r\n  }\r\n\r\n  function handleDelete() {\r\n    dbCol.doc(row.id).delete();\r\n    setRows(rows.filter((obj) => obj.id !== row.id));\r\n    setModalOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={modalOpen}\r\n        closeIcon\r\n        onClose={() => {\r\n          setModalOpen(false);\r\n        }}\r\n      >\r\n        <Modal.Header>編輯帳戶</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>名稱</label>\r\n              <input\r\n                name=\"name\"\r\n                placeholder=\"First Name\"\r\n                value={row.name}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>順序</label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"prior\"\r\n                value={row.prior}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>餘額</label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"balance\"\r\n                // placeholder=\"Last Name\"\r\n                value={row.balance}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button floated=\"left\" color=\"red\" onClick={handleDelete}>\r\n            Delete\r\n          </Button>\r\n          <Button primary onClick={handleSave}>\r\n            Save\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n      {/* {editedIndex} */}\r\n      \r\n      \r\n      \r\n      <Segment textAlign=\"center\" >\r\n        <Statistic inverted\r\n          color=\"red\"          \r\n        >\r\n          <Statistic.Value>{numberFormat(total)}</Statistic.Value>\r\n          \r\n        </Statistic>\r\n      </Segment>\r\n      \r\n      \r\n      \r\n      <Button onClick={handleAdd} color=\"olive\">\r\n        ADD\r\n      </Button>\r\n      \r\n      \r\n      \r\n      <Table unstackable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            {schema.map((obj, i) => (\r\n              <Table.HeaderCell key={i}>{obj.text}</Table.HeaderCell>\r\n            ))}\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {rows.map((row, i) => {\r\n            // return <div>{row.id}</div>\r\n            // (\r\n            return (\r\n              <Table.Row\r\n                onClick={() => {\r\n                  handleClick(row);\r\n                }}\r\n                key={row.id}\r\n              >\r\n                {/* <Table.Cell>{row.id}</Table.Cell> */}\r\n                <Table.Cell>{row.name}</Table.Cell>\r\n                <Table.Cell>{row.prior}</Table.Cell>\r\n                <Table.Cell >{numberFormat(row.balance)}</Table.Cell>\r\n              </Table.Row>\r\n            );\r\n            // )\r\n\r\n            // return renderRow(row, i);\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n\r\n      {/* <DataTable rows={rows} schema={schema} onRowClick={handleRowClick} /> */}\r\n    </>\r\n  );\r\n}\r\n","import { Table } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nexport default function List({ rows, schema }) {\r\n  return (\r\n    <>\r\n      <Table unstackable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            {/* 標題列 */}\r\n            {schema.map((header, i) => {\r\n              return <Table.HeaderCell key={i}>{header.text}</Table.HeaderCell>;\r\n            })}\r\n            <Table.HeaderCell>#</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {/* 資料列 */}\r\n          {rows.map((row, i) => {\r\n            return (\r\n              <tr key={i}>\r\n                {/* 資料欄 */}\r\n                {schema.map((obj, i) => {\r\n                  return <td key={i}>{row[obj.name]}</td>;\r\n                })}\r\n\r\n                <td>\r\n                <Link to={`/cates/edit/${row.id}`}>Edit</Link>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n","import { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport List from \"./components/List\";\r\n\r\nimport { db } from '../../utils/firebase';\r\n\r\nexport default function Cates() {\r\n\r\n  const schema = [   \r\n    {\r\n      name: 'name',\r\n      text: '名稱',\r\n      type: 'text',\r\n    },\r\n    {\r\n      name: 'prior',\r\n      text: '順序',\r\n      type: 'number',\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  const {currentUser} = useAuth()\r\n\r\n  const [rows, setRows] = useState([]);\r\n  useEffect(() => {\r\n    db.collection('cates')\r\n    .where('user','==',currentUser.email)\r\n    .orderBy('prior')\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n        setRows(data);\r\n      });\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n    <List rows={rows} schema={schema}></List>\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\n\r\nclass Square extends React.Component {\r\n  // handleClick() {\r\n  //   console.log('this is class')\r\n  // }\r\n  render() {\r\n    return (\r\n      <button className=\"square\" onClick={this.props.onClick}>\r\n        {this.props.value}\r\n      </button>\r\n    );\r\n    // return (\r\n    //   <button className=\"square\" onClick={()=>this.handleClick()}>\r\n    //     {this.props.value}\r\n    //   </button>\r\n    // );\r\n  }\r\n}\r\n\r\n// function Square(props) {\r\n//   function handleClick() {\r\n//     console.log('this is square')\r\n//   }\r\n//   return (\r\n\r\n//       <button className='square'  onClick={handleClick}>\r\n//         {props.value}\r\n//       </button>\r\n\r\n//   );\r\n// }\r\n\r\nexport default class TicTacToe extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      squares: Array(9).fill(null),\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const squaresCopy = this.state.squares.slice();\r\n    squaresCopy[i] = 'X';\r\n    this.setState({\r\n      squares: squaresCopy,\r\n    });\r\n    // this.setState({ value: 'X' });\r\n  }\r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.state.squares[i]}\r\n        onClick={() => {\r\n          this.handleClick(i);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column>{this.renderSquare(0)}</Grid.Column>\r\n          <Grid.Column>{this.renderSquare(1)}</Grid.Column>\r\n          <Grid.Column>{this.renderSquare(2)}</Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column>{this.renderSquare(3)}</Grid.Column>\r\n          <Grid.Column>{this.renderSquare(4)}</Grid.Column>\r\n          <Grid.Column>{this.renderSquare(5)}</Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          {/* <Grid.Column>{this.renderSquare(6)}</Grid.Column> */}\r\n          <Grid.Column>{this.renderSquare(7)}</Grid.Column>\r\n          <Grid.Column>{this.renderSquare(8)}</Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import { db } from '../../../utils/firebase';\r\nimport DataTable from '../../../components/DataTable';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Table,\r\n  Icon,\r\n  Label,\r\n  Header,\r\n  Input,\r\n  Select,\r\n  Grid,\r\n} from 'semantic-ui-react';\r\n\r\nexport default function ItemList({\r\n  cates,\r\n  rows,\r\n  rowsCopy,\r\n  setRows,\r\n  setItem,\r\n  setItemCopy,\r\n  setEditedIndex,\r\n  setOpen,\r\n  activeAccount,\r\n  setIsIncome,\r\n  isIncome,\r\n  setIsIncomeOrigin,\r\n  setCate,\r\n}) {\r\n  const [search, setSearch] = useState('');\r\n  // const [rows, setRows] = React.useState([]);\r\n  const schema = [\r\n    { text: '日期', value: 'date', type: 'date' },\r\n    { text: '帳戶', value: 'account', type: 'map' },\r\n    { text: '類別', value: 'cate', type: 'string' },\r\n    { text: '項目', value: 'title', type: 'string' },\r\n    { text: '收入', value: 'income', type: 'number' },\r\n    { text: '支出', value: 'expense', type: 'number' },\r\n  ];\r\n\r\n  // React.useEffect(() => {\r\n  // axios.get('http://192.168.0.12:9000/balances').then(res=>{\r\n  //   setRows(res.data)\r\n  // })\r\n\r\n  function handleEdit(row) {\r\n    // setIsIncome(row.income?true:false)\r\n\r\n    setCate(row.cate);\r\n\r\n    // 設定作用中項目(收入或支出),同時更新表單中的金額\r\n    setIsIncome((prev) => {\r\n      let editedRow = { date: row.date, title: row.title, id: row.id };\r\n      if (row.income) {\r\n        setItem({ ...editedRow, amt: row.income });\r\n        setItemCopy({ ...editedRow, amt: row.income });\r\n        return true;\r\n      } else {\r\n        setItem({ ...editedRow, amt: row.expense });\r\n        setItemCopy({ ...editedRow, amt: row.expense });\r\n        return false;\r\n      }\r\n    });\r\n\r\n    setIsIncomeOrigin(() => {\r\n      if (row.income) return true;\r\n      return false;\r\n    });\r\n\r\n    setEditedIndex(rows.indexOf(row));\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleSearch(e) {\r\n    setSearch(e.target.value);\r\n\r\n    // 要 toLowerCase 才能正確查詢\r\n    setRows(\r\n      rowsCopy.filter((row) =>\r\n        row.title.toLowerCase().includes(e.target.value.toLowerCase())\r\n      )\r\n    );\r\n  }\r\n\r\n  function handleCateSearch(e, obj) {\r\n    console.log(obj.value);\r\n    // setSearch(e.target.value);\r\n\r\n    // 要 toLowerCase 才能正確查詢\r\n    setRows(rowsCopy.filter((row) => (row.cate === obj.value)));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* {search} */}\r\n      {/* {JSON.stringify(rows)} */}\r\n      <Grid>\r\n        <Grid.Row columns={2}>\r\n          <Grid.Column>\r\n            <Input\r\n              name=\"search\"\r\n              fluid\r\n              value={search}\r\n              onChange={handleSearch}\r\n              placeholder=\"Search...\"\r\n            ></Input>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Select\r\n              selection\r\n              fluid\r\n              label=\"類別\"\r\n              placeholder=\"\"\r\n              // value={cate}\r\n              options={cates}\r\n              onChange={handleCateSearch}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n\r\n      <Table unstackable>\r\n        {/* <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>日期</Table.HeaderCell>\r\n            <Table.HeaderCell>項目</Table.HeaderCell> \r\n            <Table.HeaderCell>金額</Table.HeaderCell>\r\n             <Table.HeaderCell>#</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header> */}\r\n        <Table.Body>\r\n          {rows.map((row) => {\r\n            return (\r\n              <Table.Row\r\n                key={row.id}\r\n                onClick={() => {\r\n                  handleEdit(row);\r\n                }}\r\n              >\r\n                <Table.Cell>\r\n                  <Header as=\"h4\">{row.title}</Header>\r\n                  <span>{row.date} </span>\r\n\r\n                  {!activeAccount && (\r\n                    <Label color=\"teal\">{row.account?.name}</Label>\r\n                  )}\r\n                  {row.cate && <Label>{row.cate}</Label>}\r\n                </Table.Cell>\r\n                <Table.Cell textAlign=\"right\">\r\n                  {row.income ? (\r\n                    <Label color=\"teal\" circular>\r\n                      存\r\n                    </Label>\r\n                  ) : (\r\n                    <Label color=\"orange\" circular>\r\n                      提\r\n                    </Label>\r\n                  )}\r\n                  <br></br>$ {row.income ? row.income : row.expense + ''}\r\n                  {/* {JSON.stringify(row)} */}\r\n                </Table.Cell>\r\n\r\n                {/* <Table.Cell>{row.date.slice(5,10)}</Table.Cell>\r\n                <Table.Cell>{row.title}</Table.Cell>\r\n                <Table.Cell>{row.expense}</Table.Cell>\r\n                <Table.Cell>{row.account?.name}</Table.Cell> */}\r\n                {/* <Table.Cell\r\n                  onClick={() => {\r\n                    handleEdit(row);\r\n                  }}\r\n                >\r\n                  <a href=\"#\">\r\n                    <Icon name=\"edit\" />\r\n                  </a>\r\n                </Table.Cell> */}\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n\r\n      {/* <DataTable rows={rows} schema={schema} /> */}\r\n    </>\r\n  );\r\n}\r\n","import { Form, Button, Modal, Menu } from 'semantic-ui-react';\r\nimport { useState } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { db } from '../../../utils/firebase';\r\nimport { useAuth } from '../../../contexts/AuthContext';\r\nconst EditForm = ({\r\n  rows,\r\n  setRows,\r\n  rowsCopy,\r\n  setRowsCopy,\r\n  rowsAccount,\r\n  setRowsAccount,\r\n  item,\r\n  setItem,\r\n  editedIndex,\r\n  defalutItem,\r\n  setEditedIndex,\r\n  open,\r\n  setOpen,\r\n  setActiveAccount,\r\n  activeAccount,\r\n  itemCopy,\r\n  isIncome,\r\n  setIsIncome,\r\n  isIncomeOrigin,\r\n  cates,\r\n  cate,\r\n  setCate,\r\n}) => {\r\n  const { currentUser } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const types = [\r\n    { key: 'm', text: '一般', value: 'male' },\r\n    { key: 'f', text: '轉帳', value: 'female' },\r\n    { key: 'o', text: '投資', value: 'other' },\r\n  ];\r\n\r\n  // const [amt, setAmt] = useState('');\r\n\r\n  // 表單輸入時,設定 item 的值\r\n  const handleChange = (e) => {\r\n    console.log(item);\r\n    setItem({ ...item, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const dbCol = db.collection('balances');\r\n\r\n  function saveItem() {\r\n    // 新增(判斷 isIncome 收入或支出 )\r\n    if (editedIndex == -1) {\r\n      let editedRow = {\r\n        date: item.date,\r\n        title: item.title,\r\n        // cate: cate,\r\n        user: currentUser.email,\r\n        account: activeAccount,\r\n      };\r\n      // 有選類別才寫入\r\n      if (cate) editedRow.cate = cate;\r\n\r\n      if (isIncome) {\r\n        editedRow = {\r\n          ...editedRow,\r\n          income: item.amt,\r\n        };\r\n      } else {\r\n        editedRow = {\r\n          ...editedRow,\r\n          expense: item.amt,\r\n        };\r\n      }\r\n\r\n      setLoading(true);\r\n      dbCol.add(editedRow).then((doc) => {\r\n        console.log(doc.id);\r\n        const row = {\r\n          ...editedRow,\r\n          id: doc.id,\r\n          // user: currentUser.email,\r\n          // account: activeAccount,\r\n        };\r\n        setRows([row, ...rows]);\r\n        setRowsCopy([row, ...rowsCopy]);\r\n        setLoading(false);\r\n        setEditedIndex(-1);\r\n        setItem(defalutItem);\r\n        setOpen(false);\r\n\r\n        // 更新帳額餘額\r\n        let amt = activeAccount.balance - item.amt * 1;\r\n        if (isIncome) amt = activeAccount.balance + item.amt * 1;\r\n        updateBalance(amt);\r\n      });\r\n    } else {\r\n      // 更新\r\n      let editedRow = {\r\n        date: item.date,\r\n        title: item.title,\r\n        // cate: cate,\r\n        user: currentUser.email,\r\n        account: activeAccount,\r\n      };\r\n\r\n      // 有選類別才寫入\r\n      if (cate) editedRow.cate = cate;\r\n\r\n      if (isIncome) {\r\n        editedRow = {\r\n          // date: item.date,\r\n          // title: item.title,\r\n          // cate: cate,\r\n          // user: currentUser.email,\r\n          // account: activeAccount,\r\n          ...editedRow,\r\n          income: item.amt,\r\n          expense: null,\r\n        };\r\n        // delete editedRow.expense;\r\n      } else {\r\n        editedRow = {\r\n          // date: item.date,\r\n          // title: item.title,\r\n          // cate: cate,\r\n          // user: currentUser.email,\r\n          // account: activeAccount,\r\n          ...editedRow,\r\n          expense: item.amt,\r\n          income: null,\r\n        };\r\n        // delete editedRow.income;\r\n      }\r\n\r\n      setLoading(true);\r\n      dbCol\r\n        .doc(item.id)\r\n        // .update(editedRow)\r\n        // 用 set 避免收支互改時,資料庫一筆資料同時有收支的情形\r\n        // 已有設定值為 null 可用 update\r\n        .update(editedRow)\r\n        // .update(item)\r\n        .then(() => {\r\n          // 更新帳額餘額\r\n          let amt =\r\n            // activeAccount.balance - item.expense * 1 + itemCopy.expense * 1;\r\n            activeAccount.balance - item.amt * 1 + itemCopy.amt * 1;\r\n          if (isIncome)\r\n            amt = activeAccount.balance * 1 + item.amt * 1 - itemCopy.amt * 1;\r\n\r\n          // 原來是支出=>收入\r\n          if (!isIncomeOrigin && isIncome)\r\n            amt = activeAccount.balance + item.amt * 1 + itemCopy.amt * 1;\r\n\r\n          // 原來是收入=>支出\r\n          if (isIncomeOrigin && !isIncome)\r\n            amt = activeAccount.balance - item.amt * 1 - itemCopy.amt * 1;\r\n          updateBalance(amt);\r\n\r\n          // 先更新帳戶餘額再做表格更新,才會正常\r\n          let newItemList = rows.slice();\r\n          // Object.assign(newItemList[editedIndex], item);\r\n          // delete editedRow[\"income\"];\r\n          Object.assign(newItemList[editedIndex], editedRow);\r\n          // console.log(newItemList);\r\n          setRows(newItemList);\r\n\r\n          setLoading(false);\r\n          setEditedIndex(-1);\r\n          setItem(defalutItem);\r\n          setOpen(false);\r\n        });\r\n    }\r\n  }\r\n\r\n  function updateBalance(amt) {\r\n    // 更新帳戶餘額\r\n    db.collection('accounts').doc(activeAccount.id).update({ balance: amt });\r\n    const index = rowsAccount.indexOf(activeAccount);\r\n    const newRows = rowsAccount.slice();\r\n    Object.assign(newRows[index], { ...activeAccount, balance: amt });\r\n    setRowsAccount(newRows);\r\n  }\r\n  const handleDelete = () => {\r\n    setLoading(true);\r\n    dbCol\r\n      .doc(item.id)\r\n      .delete()\r\n      .then(() => {\r\n        setRows(rows.filter((obj) => obj.id !== item.id));\r\n        setRowsCopy(rowsCopy.filter((obj) => obj.id !== item.id));\r\n        setEditedIndex(-1);\r\n        setItem(defalutItem);\r\n        setOpen(false);\r\n        setLoading(false);\r\n\r\n        let amt = activeAccount.balance + item.amt * 1;\r\n        if (isIncome) amt = activeAccount.balance - item.amt * 1;\r\n\r\n        updateBalance(amt);\r\n\r\n        // setActiveAccount(function (prev) {\r\n        //   let amt = prev.balance + item.expense * 1\r\n\r\n        //   // 刪除支出\r\n        //   db.collection('accounts')\r\n        //   .doc(activeAccount.id)\r\n        //   .update({ balance: amt });\r\n\r\n        //   return { ...prev, balance: amt };\r\n        // });\r\n      });\r\n  };\r\n\r\n  function handleAmtChange(e) {\r\n    setAmt(e.target.value);\r\n  }\r\n\r\n  function handleItemClick(e, { name }) {  \r\n\r\n    console.log(item);\r\n    // 設定作用中項目樣式\r\n    // 設定金額為收入或支出\r\n    if (name === 'income') {\r\n      setIsIncome(true);\r\n      // setItem({...item, income:})\r\n    } else {\r\n      setIsIncome(false);\r\n    }\r\n   \r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <pre>{JSON.stringify(itemCopy)}</pre> */}\r\n\r\n      <Modal\r\n        open={open}\r\n        closeIcon\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n      >\r\n        <Modal.Header>\r\n          編輯表單\r\n          {isIncomeOrigin ? 'income' : 'expense'}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          {/* {JSON.stringify(item)} */}\r\n          <Menu fluid widths={2} pointing secondary>\r\n            <Menu.Item\r\n              color=\"teal\"\r\n              name=\"income\"\r\n              active={isIncome}\r\n              onClick={handleItemClick}\r\n            >\r\n              收入\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              color=\"orange\"\r\n              name=\"expense\"\r\n              active={!isIncome}\r\n              onClick={handleItemClick}\r\n            >\r\n              支出\r\n            </Menu.Item>\r\n          </Menu>\r\n\r\n          <Form>\r\n            <Form.Field>\r\n              <label>日期</label>\r\n              <input\r\n                name=\"date\"\r\n                type=\"date\"\r\n                placeholder=\"\"\r\n                value={item.date}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n\r\n            <Form.Select\r\n              selection\r\n              fluid\r\n              label=\"類別\"\r\n              placeholder=\"\"\r\n              value={cate}\r\n              options={cates}\r\n              onChange={(e, obj) => {\r\n                setCate(obj.value);\r\n                console.log(obj.value);\r\n              }}\r\n            />\r\n\r\n            <Form.Field>\r\n              <label>項目</label>\r\n              <input\r\n                name=\"title\"\r\n                placeholder=\"\"\r\n                value={item.title}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>金額</label>\r\n              <input\r\n                name=\"amt\"\r\n                type=\"number\"\r\n                placeholder=\"\"\r\n                value={item.amt}\r\n                // value={isIncome?item.income:item.expense}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n\r\n            <Form.Select\r\n              fluid\r\n              label=\"統計類型\"\r\n              options={types}\r\n              placeholder=\"\"\r\n            />\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          {editedIndex > -1 && (\r\n            <Button\r\n              loading={loading}\r\n              floated=\"left\"\r\n              color=\"red\"\r\n              onClick={handleDelete}\r\n            >\r\n              Delete\r\n            </Button>\r\n          )}\r\n\r\n          <Button loading={loading} floated=\"right\" primary onClick={saveItem}>\r\n            Save\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditForm;\r\n","import { Grid, Segment } from 'semantic-ui-react';\r\nimport { useState, useEffect } from 'react';\r\nimport { db } from '../../../utils/firebase';\r\n\r\nimport { useAuth } from '../../../contexts/AuthContext';\r\n\r\nconst Accounts = ({rows, accountClick, activeAccount}) => {\r\n  const { currentUser } = useAuth();\r\n  // const [topAccounts, setTopAccounts] = useState([]);\r\n  // 選取帳戶\r\n  // const [activeAccount, setActiveAccount] = useState();\r\n  // useEffect(() => {\r\n  //   db.collection('accounts')\r\n  //     .where('user', '==', currentUser.email)\r\n  //     .limit(3)\r\n  //     .get()\r\n  //     .then((snapshot) => {\r\n  //       const data = snapshot.docs.map((doc) => {\r\n  //         return { ...doc.data(), id: doc.id };\r\n  //       });\r\n  //       setTopAccounts(data);\r\n  //     });\r\n  // }, []);\r\n\r\n  return (\r\n    <Grid columns={3}>\r\n      {rows.map((row, i) => (\r\n        <Grid.Column key={row.id}>\r\n          <Segment\r\n            textAlign=\"center\"\r\n            color=\"teal\"\r\n            // 點選反白\r\n            inverted={activeAccount?.name === row.name}\r\n            onClick={() => {\r\n              accountClick(row);\r\n            }}\r\n          >\r\n            {row.name}\r\n          </Segment>\r\n        </Grid.Column>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Accounts;\r\n","import ItemList from './components/ItemList';\r\nimport EditForm from './components/EditForm';\r\nimport Accounts from './components/Accounts';\r\nimport { useState, useEffect } from 'react';\r\nimport { db, auth } from '../../utils/firebase';\r\nimport { Button, Grid, Header, Statistic, Dropdown } from 'semantic-ui-react';\r\n\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst Balances = () => {\r\n  const { currentUser, logout } = useAuth();\r\n\r\n  // 顯示 Modal\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // 資料陣列\r\n  const [rows, setRows] = useState([]);\r\n\r\n  // 提供給篩選用的資料陣列,才不會因為篩選變動了原陣列\r\n  const [rowsCopy, setRowsCopy] = useState([]);\r\n\r\n  // 帳戶資料\r\n  const [rowsAccount, setRowsAccount] = useState([]);\r\n\r\n  const [activeAccount, setActiveAccount] = useState();\r\n\r\n  const defalutItem = {\r\n    date: new Date().toISOString().slice(0, 10),\r\n    title: '',\r\n    amt: '',\r\n  };\r\n\r\n  // 單筆資料\r\n  const [item, setItem] = useState(defalutItem);\r\n\r\n  // 點選時編輯時,複製一份單筆資料,做為儲存時計算帳戶餘額之用\r\n  const [itemCopy, setItemCopy] = useState(defalutItem);\r\n\r\n  const [editedIndex, setEditedIndex] = useState(-1);\r\n\r\n  // 收支判斷\r\n  const [isIncome, setIsIncome] = useState(false);\r\n\r\n  // 收支判斷(在更新時,有可能收支互換,用此作用判斷以便更新帳戶餘額)\r\n  // 在 ItemList row click 事件設定\r\n  // 在 EditForm save 時,用來判斷\r\n  const [isIncomeOrigin, setIsIncomeOrigin] = useState(false);\r\n\r\n  // 類別下拉\r\n  const [cate, setCate] = useState();\r\n  const [cates, setCates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // axios.get('http://192.168.0.12:9000/balances').then(res=>{\r\n    //   setRows(res.data)\r\n    // })\r\n\r\n    // 類別資料\r\n    let colCates = db.collection('cates').orderBy('prior');\r\n    // let colCates = db.collection('cates');\r\n    if (currentUser) colCates = colCates.where('user', '==', currentUser.email);\r\n\r\n    colCates = colCates.get().then((snapshot) => {\r\n      const rows = snapshot.docs.map((doc) => {\r\n        const d = doc.data();\r\n        return { text: d.name, value: d.name, key: doc.id };\r\n      });\r\n      setCates(rows);\r\n    });\r\n\r\n    // console.log(currentUser?.uid)\r\n    let dbCol = db.collection('balances').orderBy('date', 'desc').limit(300);\r\n    if (currentUser) dbCol = dbCol.where('user', '==', currentUser?.email);\r\n\r\n    // 帳戶資料\r\n    db.collection('accounts')\r\n      .where('user', '==', currentUser.email)\r\n      .orderBy('prior')\r\n      .limit(3)\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          console.log(doc.data().name);\r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n\r\n        // 帳戶預設值\r\n        setActiveAccount(data[0]);\r\n\r\n        setRowsAccount(data);\r\n\r\n        // 收支資料(只顯示近三個月)\r\n        let yyyy = new Date().getFullYear();\r\n        let mm = new Date().getMonth() - 1;\r\n\r\n        if (mm < 10) mm = '0' + mm;\r\n        // console.log(mm);\r\n        dbCol\r\n          .where('date', '>', `${yyyy}-${mm}`)\r\n          // .where('date', '<', `${yyyy}-${mm}`)\r\n          // .where('account','==',activeAccount)\r\n          .get()\r\n          .then((snapshot) => {\r\n            // console.log(snapshot.size);\r\n            const data2 = snapshot.docs.map((doc) => {\r\n              return { ...doc.data(), id: doc.id };\r\n            });\r\n            // setRows(data);\r\n\r\n            setRowsCopy(data2);\r\n            setRows(\r\n              data2.filter(\r\n                (row) => row.account && row.account.name == data[0].name\r\n                // (row) => row.account && row.account.name == '現金'\r\n              )\r\n            );\r\n          });\r\n      });\r\n  }, []);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    setItem(defalutItem);\r\n    setEditedIndex(-1);\r\n  };\r\n\r\n  const handleAccountClick = (account) => {\r\n    setActiveAccount(account);\r\n    setRows(\r\n      rowsCopy.filter((row) => row.account && row.account.name == account.name)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <pre>{JSON.stringify(itemCopy)}</pre> */}\r\n\r\n      {/* {JSON.stringify(activeAccount?.balance)} */}\r\n\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Accounts\r\n              rows={rowsAccount}\r\n              activeAccount={activeAccount}\r\n              accountClick={handleAccountClick}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n\r\n      {activeAccount && (\r\n        <Grid columns={2}>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              {/* <Header>{rows.length}</Header> */}\r\n\r\n              <Statistic horizontal>\r\n                <Statistic.Value>{activeAccount?.balance}</Statistic.Value>\r\n              </Statistic>\r\n            </Grid.Column>\r\n            <Grid.Column verticalAlign=\"middle\">\r\n              <Button onClick={handleOpen} floated=\"right\" color=\"yellow\">\r\n                ADD\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      )}\r\n\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <ItemList\r\n              setCate={setCate}\r\n              cates={cates}\r\n              setOpen={setOpen}\r\n              rows={rows}\r\n              rowsCopy={rowsCopy}\r\n              setRows={setRows}\r\n              item={item}\r\n              setItem={setItem}\r\n              setItemCopy={setItemCopy}\r\n              isIncome={isIncome}\r\n              setIsIncome={setIsIncome}\r\n              isIncomeOrigin={isIncomeOrigin}\r\n              setIsIncomeOrigin={setIsIncomeOrigin}\r\n              setEditedIndex={setEditedIndex}\r\n              activeAccount={activeAccount}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n\r\n      {/* {JSON.stringify(item)} */}\r\n      <EditForm\r\n        cates={cates}\r\n        cate={cate}\r\n        setCate={setCate}\r\n        isIncomeOrigin={isIncomeOrigin}\r\n        setIsIncome={setIsIncome}\r\n        isIncome={isIncome}\r\n        defalutItem={defalutItem}\r\n        rows={rows}\r\n        setRows={setRows}\r\n        setRowsCopy={setRowsCopy}\r\n        rowsCopy={rowsCopy}\r\n        rowsAccount={rowsAccount}\r\n        setRowsAccount={setRowsAccount}\r\n        item={item}\r\n        setItem={setItem}\r\n        editedIndex={editedIndex}\r\n        setEditedIndex={setEditedIndex}\r\n        open={open}\r\n        setOpen={setOpen}\r\n        setActiveAccount={setActiveAccount}\r\n        activeAccount={activeAccount}\r\n        itemCopy={itemCopy}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Balances;\r\n","import { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { db } from '../../../utils/firebase';\r\n\r\nimport { Form, Button } from 'semantic-ui-react';\r\n\r\nexport default function EditCate() {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n\r\n  const defalutItem = {\r\n    name: '',\r\n    prior: '',\r\n  };\r\n\r\n  const [item, setItem] = useState(defalutItem);\r\n\r\n  useEffect(() => {\r\n    var docRef = db.collection('cates').doc(id);\r\n\r\n    docRef\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          setItem(doc.data());\r\n          console.log('Document data:', doc.data());\r\n        } else {\r\n          // doc.data() will be undefined in this case\r\n          console.log('No such document!');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error getting document:', error);\r\n      });\r\n\r\n   \r\n  }, []);\r\n\r\n\r\n// 表單輸入時,設定 item 的值\r\nconst handleChange = (e) => {\r\n  setItem({ ...item, [e.target.name]: e.target.value });\r\n};\r\n\r\nconst handleSave =  () => {\r\n\r\n  var docRef = db.collection('cates').doc(id);\r\n\r\n  // 將順序從文字轉成數字,排序看起來才會正常\r\n  \r\n  docRef.update({...item, prior:Number(item.prior)}).then(()=>{\r\n    history.push('/cates')\r\n  })\r\n \r\n  \r\n  \r\n \r\n};\r\n\r\nconst handleDelete = async () => {\r\n  // if(contactId)\r\n  // await ContactService.DeleteContact(item.id)      \r\n  // history.push('/contacts')\r\n \r\n};\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSave}>\r\n        <Form.Field>\r\n          <label>名稱</label>\r\n          <input\r\n            name=\"name\"\r\n            placeholder=\"\"\r\n            value={item.name}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>順序</label>\r\n          <input\r\n          type=\"number\"\r\n            name=\"prior\"\r\n            placeholder=\"\"\r\n            value={item.prior}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Button type=\"submit\" primary>\r\n          Save\r\n        </Button>\r\n      </Form>\r\n      {/* <div>{JSON.stringify(item)}</div> */}\r\n    </>\r\n\r\n   \r\n\r\n    // <div>{id}</div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button, Table, Modal, Form, Input } from 'semantic-ui-react';\r\nimport { db } from '../utils/firebase';\r\nexport default function AutoTable(props) {\r\n  const defalutItem = props.defalutItem;\r\n  const schema = props.schema;\r\n  // const data = props.data;\r\n  // 資料陣列\r\n  const [itemList, setItemList] = React.useState([]);\r\n  // 資料列\r\n  const [item, setItem] = React.useState(defalutItem);\r\n  // 編輯列索引\r\n  const [editedIndex, setEditedIndex] = React.useState(-1);\r\n  // Modal\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const dbCol = db.collection(props.collectionName);\r\n\r\n  React.useEffect(() => {\r\n    dbCol.get().then((snapshot) => {\r\n      const rows = snapshot.docs.map((doc) => {\r\n        return { ...doc.data(), id: doc.id };\r\n      });\r\n      setItemList(rows);\r\n    });\r\n  }, []);\r\n\r\n  // CRUD\r\n  function handleEdit(obj) {\r\n    setOpen(true);\r\n    // 點選編輯列的索引,用來修改後,把值傳回該列\r\n    setEditedIndex(itemList.indexOf(obj));\r\n    setItem(obj);\r\n  }\r\n\r\n  function handleUpdate() {\r\n    // 新增\r\n    if (editedIndex == -1) {\r\n      const row = { ...item, id: Date.now() };\r\n      dbCol.add(row);\r\n      setItemList([...itemList, row]);\r\n    }\r\n    // 更新\r\n    else {\r\n      dbCol.doc(item.id).update(item);\r\n\r\n      // 複製一份原資料陣列\r\n      const data = itemList.slice();\r\n      // 將編輯列的資料寫入\r\n\r\n      Object.assign(data[editedIndex], item);\r\n      // 設定更改後的資料陣列給原陣列\r\n      setItemList(data);\r\n      setEditedIndex(-1);\r\n    }\r\n\r\n    // 新增或更新完將表單輸入項的值清空\r\n    setItem(defalutItem);\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleDelete() {\r\n    if (!confirm('確定刪除嗎?')) return;\r\n\r\n    dbCol.doc(item.id).delete();\r\n    const data = itemList.filter((obj) => obj.id !== item.id);\r\n    setItemList(data);\r\n    setOpen(false);\r\n  }\r\n\r\n  \r\n  return (\r\n    <>\r\n      {/* <pre>{JSON.stringify(item)}</pre> */}\r\n      {/* <pre>{editedIndex}</pre> */}\r\n      <Modal open={open} closeIcon onClose={() => setOpen(false)}>\r\n        <Modal.Header>編輯表單</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            {/* 表單 */}\r\n            {schema.map((obj, i) => {\r\n              return (\r\n                <Form.Field key={i}>\r\n                  <label>{obj.text}</label>\r\n                  <Input\r\n                    placeholder={obj.text}\r\n                    name={obj.name}\r\n                    value={item[obj.name]}\r\n                    type={obj.type}\r\n                    onChange={(e) => {\r\n                      setItem({ ...item, [e.target.name]: e.target.value });\r\n                    }}\r\n                  />\r\n                </Form.Field>\r\n              );\r\n            })}\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <button className=\"ui button blue\" onClick={handleUpdate}>\r\n            儲存\r\n          </button>\r\n          {editedIndex !== -1 && (\r\n            <button\r\n              className=\"ui button red left floated\"\r\n              onClick={handleDelete}\r\n            >\r\n              刪除\r\n            </button>\r\n          )}\r\n        </Modal.Actions>\r\n      </Modal>\r\n\r\n      <button\r\n        className=\"ui button\"\r\n        onClick={() => {\r\n          setOpen(true);\r\n          setItem(defalutItem);\r\n          setEditedIndex(-1);\r\n        }}\r\n      >\r\n        新增\r\n      </button>\r\n\r\n      <MyTable edit={handleEdit} schema={schema} rows={itemList} dataRow={props.dataRow}  />\r\n    </>\r\n  );\r\n}\r\n\r\nclass MyTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Table unstackable>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              {/* 標題列 */}\r\n              {this.props.schema.map((header, i) => {\r\n                return (\r\n                  <Table.HeaderCell key={i}>{header.text}</Table.HeaderCell>\r\n                );\r\n              })}\r\n              <Table.HeaderCell>#</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {/* 資料列 */}\r\n            {this.props.rows.map((row, i) => {\r\n              return (\r\n                <tr key={i}>\r\n                  {/* 資料欄(自訂或預設) */}\r\n                  {this.props.dataRow\r\n                    ? this.props.dataRow\r\n                    : this.props.schema.map((obj, i) => {\r\n                        return <td key={i}>{row[obj.name]}</td>;\r\n                      })}\r\n\r\n                  <td onClick={() => this.props.edit(row)}>\r\n                    <a href=\"#\">編輯</a>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </Table.Body>\r\n        </Table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import AutoTableFirebase from '../components/AutoTableFirebase';\r\nexport default function Stocks() {\r\n  const schema = [\r\n    { name: 'name', text: '名稱', type: 'text' },\r\n    { name: 'qty', text: '股數', type: 'number' },\r\n    { name: 'price', text: '現價', type: 'number' },\r\n    { name: 'cost', text: '成本', type: 'number' }\r\n  ];\r\n  const defalutItem = {\r\n    name:'',\r\n    qty:'',\r\n    price:'',\r\n    cost:''\r\n  }\r\n\r\n  // 自訂資料欄\r\n  let dataRow = schema.map((obj, i) => {\r\n    return <td key={i}>A</td>;    \r\n  })\r\n  // console.log(dataRow)\r\n  // dataRow=[...dataRow]\r\n  const collectionName = 'stocks'\r\n  return <AutoTableFirebase schema={schema} defalutItem={defalutItem}\r\n  collectionName={collectionName} \r\n  />;\r\n}\r\n","import React, { createContext, useState } from 'react';\r\n// import uuid from 'uuid';\r\n\r\nexport const BookContext = createContext();\r\n\r\nconst BookContextProvider = (props) => {\r\n  // 資料陣列\r\n  const [books, setBooks] = useState([\r\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n    .then(response => response.json())\r\n    .then(json => console.log(json))\r\n  ]);\r\n\r\n  // 資料列預設值\r\n  const defalutItem = {\r\n    title: '',\r\n    author: '',\r\n  };\r\n  // 編輯列\r\n  const [editedBook, setEditedBook] = useState(defalutItem);\r\n  // 編輯列索引\r\n  const [editedIndex, setEditedIndex] = useState(-1);\r\n  // 視窗開關\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // 開啟編輯視窗\r\n  const openForm = () => {\r\n    setEditedIndex(-1);\r\n    setEditedBook(defalutItem);\r\n    setOpen(true);\r\n  };\r\n\r\n  // 刪除列\r\n  const removeBook = (id) => {\r\n    setBooks(books.filter((book) => book.id !== id));\r\n  };\r\n\r\n  // 按下表格的編輯列\r\n  const editBook = (book) => {\r\n    setEditedBook(book);\r\n    setEditedIndex(books.indexOf(book));\r\n    setOpen(true);\r\n  };\r\n\r\n  // 表單輸入時 onChange\r\n  const updateBook = (book) => {\r\n    setEditedBook(book);\r\n  };\r\n\r\n  // 儲存資料\r\n  const saveBook = (book) => {\r\n    // 新增或修改\r\n    if (editedIndex == -1) {\r\n      setBooks([...books, { ...book, id: Date.now() }]);\r\n    } else {\r\n      const data = books.slice();\r\n      Object.assign(data[editedIndex], book);\r\n      setBooks(data);\r\n    }\r\n    // 預設值\r\n    setEditedBook(defalutItem);\r\n    setEditedIndex(-1);\r\n    // 視窗關閉\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <BookContext.Provider\r\n      value={{\r\n        books,\r\n        editedBook,\r\n        open,\r\n        removeBook,\r\n        editBook,\r\n        updateBook,\r\n        saveBook,\r\n        openForm,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BookContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BookContextProvider;\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport { db } from '../utils/firebase';\r\n\r\nexport const FirebaseBookContext = createContext();\r\n\r\nconst FirebaseBookContextProvider = (props) => {\r\n  const dbCol = db.collection(props.collectionName)\r\n  useEffect(() => {\r\n    dbCol\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n        setBooks(data);\r\n      });\r\n  }, []);\r\n\r\n  // 資料陣列\r\n  const [books, setBooks] = useState([]);\r\n\r\n  // 資料列預設值\r\n  const defalutItem = {\r\n    name: '',\r\n    price: '',\r\n  };\r\n  // 編輯列\r\n  const [editedBook, setEditedBook] = useState(defalutItem);\r\n  // 編輯列索引\r\n  const [editedIndex, setEditedIndex] = useState(-1);\r\n  // 視窗開關\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // 開啟編輯視窗\r\n  const openForm = () => {\r\n    setEditedIndex(-1);\r\n    setEditedBook(defalutItem);\r\n    setOpen(true);\r\n  };\r\n\r\n  // 關閉編輯視窗\r\n  const closeForm = () => {\r\n    setEditedIndex(-1);\r\n    setEditedBook(defalutItem);\r\n    setOpen(false);\r\n  };\r\n\r\n  // 刪除列\r\n  const removeBook = (id) => {\r\n    dbCol.doc(id).delete()\r\n    setBooks(books.filter((book) => book.id !== id));\r\n  };\r\n\r\n  // 按下表格的編輯列\r\n  const editBook = (book) => {\r\n    setEditedBook(book);\r\n    setEditedIndex(books.indexOf(book));\r\n    setOpen(true);\r\n  };\r\n\r\n  // 表單輸入時 onChange\r\n  const updateBook = (book) => {\r\n    setEditedBook(book);\r\n  };\r\n\r\n  // 儲存資料\r\n  const saveBook = (book) => {\r\n    // 新增或修改\r\n    if (editedIndex == -1) {\r\n      // const row = { ...book, id: Date.now() }\r\n      dbCol.add(book).then((doc)=>{\r\n        setBooks([...books, { ...book, id: doc.id } ]);\r\n      })\r\n      \r\n    } else {\r\n      dbCol.doc(book.id).update(book)\r\n      const data = books.slice();\r\n      Object.assign(data[editedIndex], book);\r\n      setBooks(data);\r\n    }\r\n    // 預設值\r\n    setEditedBook(defalutItem);\r\n    setEditedIndex(-1);\r\n    // 視窗關閉\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <FirebaseBookContext.Provider\r\n      value={{\r\n        books,\r\n        editedBook,\r\n        open,\r\n        removeBook,\r\n        editBook,\r\n        updateBook,\r\n        saveBook,\r\n        openForm,\r\n        closeForm\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FirebaseBookContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FirebaseBookContextProvider;\r\n","import { useContext } from 'react';\r\n// import { BookContext } from '../contexts/BookContext';\r\nimport { FirebaseBookContext } from '../contexts/FirebaseBookContext';\r\nimport { Table, Header, Button } from 'semantic-ui-react';\r\n\r\nconst BookList = () => {\r\n  const { editBook, books, removeBook, openForm } =\r\n    useContext(FirebaseBookContext);\r\n  const handleOpen = () => {\r\n    // console.log('open');\r\n    openForm();\r\n  };\r\n  return (\r\n    <>\r\n      <Header>{books.length}</Header>\r\n      <Button onClick={handleOpen}>ADD</Button>\r\n      <Table unstackable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>書名</Table.HeaderCell>\r\n            <Table.HeaderCell>作者</Table.HeaderCell>            \r\n            <Table.HeaderCell>#</Table.HeaderCell>\r\n            <Table.HeaderCell>#</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {books.map((book) => {\r\n            return (\r\n              <Table.Row key={book.id}>\r\n                <Table.Cell>{book.title}</Table.Cell>\r\n                <Table.Cell>{book.author}</Table.Cell>               \r\n                <Table.Cell\r\n                  onClick={() => {\r\n                    removeBook(book.id);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Table.Cell>\r\n                <Table.Cell\r\n                  onClick={() => {\r\n                    editBook(book);\r\n                  }}\r\n                >\r\n                  Edit\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BookList;\r\n","import { useContext } from 'react';\r\n// import { BookContext } from '../contexts/BookContext';\r\nimport { FirebaseBookContext } from '../contexts/FirebaseBookContext';\r\nimport { Table, Header, Button } from 'semantic-ui-react';\r\n\r\nconst BookList = () => {\r\n  const { editBook, books, removeBook, openForm } =\r\n    useContext(FirebaseBookContext);\r\n  const handleOpen = () => {\r\n    console.log('open');\r\n    openForm();\r\n  };\r\n  return (\r\n    <>\r\n      <Header>{books.length}</Header>\r\n      <Button onClick={handleOpen}>ADD</Button>\r\n      <Table unstackable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>書名</Table.HeaderCell>\r\n            <Table.HeaderCell>作者</Table.HeaderCell>\r\n            <Table.HeaderCell>Qty</Table.HeaderCell>\r\n            <Table.HeaderCell>#</Table.HeaderCell>\r\n            <Table.HeaderCell>#</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {books.map((book) => {\r\n            return (\r\n              <Table.Row key={book.id}>\r\n                <Table.Cell>{book.name}</Table.Cell>\r\n                <Table.Cell>{book.price}</Table.Cell>\r\n                <Table.Cell>{book.qty}</Table.Cell>\r\n                <Table.Cell\r\n                  onClick={() => {\r\n                    removeBook(book.id);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Table.Cell>\r\n                <Table.Cell\r\n                  onClick={() => {\r\n                    editBook(book);\r\n                  }}\r\n                >\r\n                  Edit\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BookList;\r\n","import { useContext, useState } from 'react';\r\nimport { FirebaseBookContext } from '../contexts/FirebaseBookContext';\r\nimport { Form, Input, Button, Modal } from 'semantic-ui-react';\r\nconst NewBookForm = () => {\r\n  const { editedBook, updateBook, saveBook, open, closeForm } =\r\n    useContext(FirebaseBookContext);\r\n  const [title, setTitle] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  \r\n\r\n  const handleUpdate = () => {\r\n    updateBook(editedBook, title);\r\n    setTitle('');\r\n    setAuthor('');\r\n  };\r\n\r\n  const handleSave = () => {\r\n    saveBook(editedBook);\r\n    setTitle('');\r\n    setAuthor('');\r\n  };\r\n\r\n  const updateInput = (e) => {\r\n    updateBook({\r\n      ...editedBook,\r\n      [e.target.name]: e.target.value,\r\n    });  \r\n  }\r\n  return (\r\n    <>\r\n      <Modal open={open}\r\n      closeIcon\r\n      onClose={closeForm}\r\n      >\r\n        <Modal.Header>\r\n          編輯\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>Title</label>\r\n              <Input\r\n                placeholder=\"book title\"\r\n                name=\"price\"\r\n                value={editedBook.price}\r\n                // value={editedBook['title']}\r\n                type=\"text\"\r\n                onChange={updateInput}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Author</label>\r\n              <Input\r\n                placeholder=\"book author\"\r\n                name=\"author\"\r\n                value={editedBook.author}\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  updateBook({\r\n                    ...editedBook,\r\n                    [e.target.name]: e.target.value,\r\n                  });                 \r\n                }}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n\r\n          \r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n            <Button onClick={handleSave}>Update</Button>\r\n          </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewBookForm;\r\n","import axios from \"axios\";\r\nimport { db } from \"../utils/firebase\";\r\nexport class ContactService {\r\n\r\n  static serverURL = `http://localhost:9000`;\r\n  static getAllContacts() {\r\n    let data = [];\r\n    db.collection('cates').get().then(snapshot=>{\r\n     \r\n      snapshot.docs.map(doc=>{\r\n        data.push({...doc.data()})\r\n        // return {...doc.data(), id:doc.id}\r\n      })\r\n     \r\n    })\r\n    return data;     \r\n    \r\n    // return ['a','b']\r\n    // return axios.get(`${this.serverURL}/money`)\r\n  }\r\n  \r\n}","import { ContactService } from '../../services/ContactService';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst ContactList = () => {\r\n  const [state, setState] = useState({\r\n    loading: false,\r\n    contacts: [],\r\n    errorMessage: '',\r\n  });\r\n  useEffect( () => {\r\n    setState({ ...state, loading: false });\r\n    const response =  ContactService.getAllContacts();\r\n    setState({ ...state, loading: false, contacts: response });\r\n    console.log(response);\r\n  }, []);\r\n\r\n  const { contacts } = state;\r\n  return <pre>{JSON.stringify(contacts)}</pre>;\r\n};\r\n\r\nexport default ContactList;\r\n","// import React, { useContext } from 'react';\r\nimport BookContextProvider from '../contexts/BookContext';\r\nimport BookList from '../components/BookList';\r\nimport StockList from '../components/StockList';\r\nimport FirebaseBookContextProvider from '../contexts/FirebaseBookContext';\r\n\r\nimport NewBookForm from './BookForm';\r\n\r\nimport FakeData from './FakeData';\r\nimport ContactList from './contacts/ContactList';\r\n// import  from '../contexts/BookContext';\r\n\r\nconst Books = () => {\r\n  return (\r\n    <>\r\n      {/* <FakeData /> */}\r\n      <ContactList/>\r\n      <FirebaseBookContextProvider collectionName=\"stocks\">\r\n        <NewBookForm />\r\n        <StockList />\r\n      </FirebaseBookContextProvider>\r\n      <FirebaseBookContextProvider collectionName=\"books\">\r\n        <NewBookForm />\r\n        <BookList />\r\n      </FirebaseBookContextProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Books;\r\n","import axios from \"axios\"\r\nimport { db } from \"../../utils/firebase\"\r\n// server 資料處理\r\nexport class ContactService {\r\n  static serverURL = \"http://192.168.0.12:9000\"\r\n  \r\n  // \r\n  static getAllContacts() {\r\n    let dataURL=`${this.serverURL}/contacts`\r\n    return axios.get(dataURL)\r\n  }\r\n\r\n  static getContact(contactId) {\r\n    let dataURL=`${this.serverURL}/contacts/${contactId}`\r\n    return axios.get(dataURL)\r\n  }\r\n\r\n  static AddContact(contact) {\r\n    let dataURL=`${this.serverURL}/contacts`\r\n    return axios.post(dataURL,contact)\r\n  }\r\n\r\n  static UpdateContact(contact) {\r\n    let dataURL=`${this.serverURL}/contacts/${contact.id}`\r\n    return axios.put(dataURL,contact)\r\n  }\r\n\r\n  static DeleteContact(contactId) {\r\n    let dataURL=`${this.serverURL}/contacts/${contactId}`\r\n    return axios.delete(dataURL)\r\n  }\r\n\r\n  // static getAllCates() {\r\n  //   return db.collection('cates').get()\r\n  // }\r\n}","export default __webpack_public_path__ + \"static/media/spin.0d8837f6.gif\";","import spinImg from '../img/spin.gif'\r\n\r\nexport default function Spinner() {\r\n  return (\r\n<div className=\"ui basic segment\">\r\n<img src={spinImg} className=\"ui centered medium image\" style={{width:'100px'}} />\r\n</div>\r\n\r\n    \r\n  )\r\n}","// React Contact Manager App\r\n// https://www.youtube.com/watch?v=ZfqnUm7w6ig&t=5031\r\n// 搭配 json server\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { ContactService } from './ContactService';\r\nimport { Table, Button } from 'semantic-ui-react';\r\nimport Spinner from '../../components/Spinner';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ContactList = () => {\r\n  let [state, setState] = useState({\r\n    loading: false,\r\n    contacts: [],\r\n  });\r\n\r\n  // useEffect(async () => {\r\n  //   let response = await ContactService.getAllCates().then((snapshot) => {\r\n  //     const data = snapshot.docs.map((doc) => {\r\n  //       console.log(snapshot.size);\r\n  //       return doc.data();\r\n  //     });\r\n  //     setState({ ...state, contacts: data });\r\n  //   });\r\n  // }, []);\r\n\r\n  // axios 有不同寫法\r\n  useEffect(async () => {\r\n    setState({ ...state, loading: true });\r\n    let response = await axios.get('http://192.168.0.12:9000/contacts');\r\n    setState({ ...state, loading: false, contacts: response.data });\r\n    //   setTimeout(function(){\r\n\r\n    // },1000);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   axios.get('http://192.168.0.12:9000/contacts').then((response) => {\r\n  //     setState({ ...state, contacts: response.data });\r\n  //   });\r\n  // }, []);\r\n\r\n  // useEffect(async () => {\r\n  //   let response = await ContactService.getAllContacts();\r\n  //   setState({ ...state, contacts: response.data });\r\n  // }, []);\r\n\r\n  const { contacts, loading } = state;\r\n  return (\r\n    <>\r\n      {/* <pre>{JSON.stringify(state.contacts)}</pre> */}\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <>\r\n          <Button><Link to={'/contacts/add'}>ADD</Link></Button>\r\n          <Table unstackable>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell>名稱</Table.HeaderCell>\r\n                <Table.HeaderCell>金額</Table.HeaderCell>\r\n                <Table.HeaderCell>#</Table.HeaderCell>\r\n                <Table.HeaderCell>#</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              {contacts.map((item) => {\r\n                return (\r\n                  <Table.Row key={item.id}>\r\n                    <Table.Cell>{item.name}</Table.Cell>\r\n                    <Table.Cell>{item.amt}</Table.Cell>\r\n\r\n                    <Table.Cell                     \r\n                    >\r\n                       <Link to={`/contacts/edit/${item.id}`}>Edit</Link>\r\n                    </Table.Cell>\r\n\r\n                    <Table.Cell>\r\n                      <Link to={`/contacts/view/${item.id}`}>View</Link>\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                );\r\n              })}\r\n            </Table.Body>\r\n          </Table>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { ContactService } from \"./ContactService\";\r\n\r\nexport default function ViewContact() {\r\n  let {contactId} = useParams()\r\n  useEffect(async()=>{\r\n    let response = await ContactService.getContact(contactId);\r\n    console.log(response.data)\r\n  },[])\r\n  return (\r\n    <div>\r\n      {contactId}\r\n    </div>\r\n  );\r\n}","import { Form, Button } from 'semantic-ui-react';\r\nimport { useEffect, useState } from 'react';\r\nimport { ContactService } from './ContactService';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nexport default function AddContact() {\r\n  const history = useHistory()\r\n  const {contactId} = useParams()\r\n  const defalutItem = {\r\n    name: '',\r\n    amt: '',\r\n  };\r\n\r\n  useEffect(async()=>{\r\n    if(!contactId)\r\n    return \r\n    const response = await ContactService.getContact(contactId)\r\n    // console.log(contact)\r\n    setItem(response.data)\r\n  },[])\r\n\r\n  // 單筆資料\r\n  const [item, setItem] = useState(defalutItem);\r\n\r\n  // 表單輸入時,設定 item 的值\r\n  const handleChange = (e) => {\r\n    setItem({ ...item, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if(contactId)\r\n     await ContactService.UpdateContact(item)\r\n    else\r\n     await ContactService.AddContact(item)\r\n    \r\n    history.push('/contacts')\r\n    console.log('save');\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if(contactId)\r\n    await ContactService.DeleteContact(item.id)      \r\n    history.push('/contacts')\r\n   \r\n  };\r\n\r\n  return (\r\n    <>\r\n      {' '}\r\n      <Form onSubmit={handleSave}>\r\n        <Form.Field>\r\n          <label>名稱</label>\r\n          <input\r\n            name=\"name\"\r\n            placeholder=\"\"\r\n            value={item.name}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>金額</label>\r\n          <input\r\n            name=\"amt\"\r\n            placeholder=\"\"\r\n            value={item.amt}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Button type='submit'\r\n          primary          \r\n        >\r\n          Save\r\n        </Button>\r\n\r\n       \r\n      </Form>\r\n\r\n\r\n      <Button \r\n         floated='right'\r\n         onClick={handleDelete}         \r\n        >\r\n          Delete\r\n        </Button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Segment, Icon } from 'semantic-ui-react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const { login } = useAuth();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError('');\r\n      setLoading(true);\r\n      await login(emailRef.current.value, passwordRef.current.value);\r\n      history.push('/balances');\r\n    } catch {\r\n      setError('Failed to log in');\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card fluid>\r\n        <Card.Content textAlign='center' header=\"Money 2022\" />\r\n        <Card.Content >\r\n          <Form size=\"large\" onSubmit={handleSubmit}>\r\n            <Form.Field>\r\n              <label>Email</label>\r\n              <input ref={emailRef} defaultValue=\"mkdodos@gmail.com\"></input>\r\n              {/* <input ref={emailRef} ></input> */}\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Password</label>\r\n              <input ref={passwordRef} defaultValue=\"123456\"></input>\r\n              {/* <input ref={passwordRef} ></input> */}\r\n            </Form.Field>\r\n            <Button fluid type=\"submit\" size=\"large\" color=\"blue\">\r\n              登入\r\n            </Button>\r\n          </Form>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <Icon name=\"user\" />4 Friends\r\n        </Card.Content>\r\n      </Card>\r\n\r\n      {/* <Segment></Segment> */}\r\n\r\n      {/* <Button\r\n      fluid\r\n        basic\r\n        floated=\"right\"\r\n        onClick={async () => {\r\n          await login('dada@gmail.com', '123456');\r\n          history.push('/balances');\r\n        }}\r\n        size=\"large\"\r\n        color=\"blue\"\r\n      >\r\n        Dada\r\n      </Button> */}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\"\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const {currentUser} = useAuth();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />;\r\n      }}\r\n    ></Route>\r\n  );\r\n}\r\n","import {\r\n  Container,\r\n  Grid,\r\n  Segment,\r\n  Statistic,\r\n  Dropdown,\r\n  Menu,\r\n  Button,\r\n} from 'semantic-ui-react';\r\nimport React from 'react';\r\nfunction MonthSelect(props) {\r\n  const [month, setMonth] = React.useState();\r\n  const months = [];\r\n\r\n  for (let i = 1; i <= 12; i++) {\r\n    let num = i;\r\n    if (i <= 9) num = '0' + i;\r\n    months.push({\r\n      key: num,\r\n      text: num,\r\n      value: num,\r\n    });\r\n  }\r\n  return (\r\n    <Dropdown\r\n      selection\r\n      value={month}\r\n      placeholder=\"順位\"\r\n      options={months}\r\n      onChange={props.onChange}\r\n    ></Dropdown>\r\n  );\r\n}\r\n\r\nfunction MonthButton(props) {\r\n  return (\r\n    <Menu widths={3}>\r\n      <Menu.Item>\r\n        <Button onClick={props.onMinusClick}>-</Button>\r\n      </Menu.Item>\r\n\r\n      <Menu.Item>\r\n        <Button\r\n          primary\r\n          onDoubleClick={props.onDoubleClick}\r\n          onClick={props.onClick}\r\n        >\r\n          {props.text}\r\n        </Button>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <Button onClick={props.onPlusClick}>+</Button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default MonthSelect;\r\nexport { MonthButton };\r\n","import { useEffect, useReducer, useState } from 'react';\r\nimport { Table, Segment, Statistic, Label } from 'semantic-ui-react';\r\nimport { db } from '../utils/firebase';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport numberFormat from '../utils/numberFormat';\r\nimport _ from 'lodash';\r\nimport { MonthButton } from './MonthSelect';\r\n\r\nexport default function Dashboard() {\r\n  const [total, setTotal] = useState(0);\r\n  const { currentUser } = useAuth();\r\n\r\n  function reducer(state, action) {\r\n    switch (action.type) {\r\n      case 'sort':\r\n        // 第二次按下同欄位\r\n        if (state.column === action.column) {\r\n          return {\r\n            ...state,\r\n            data: state.data.slice().reverse(),\r\n            direction:\r\n              state.direction === 'ascending' ? 'descending' : 'ascending',\r\n          };\r\n        }\r\n        // 第一次按下某欄位\r\n        return {\r\n          ...state,\r\n          column: action.column,\r\n          data: _.sortBy(state.data, [action.column]),\r\n          // dataCopy: state.data ,\r\n          direction: 'ascending',\r\n        };\r\n      // 初始化資料,並留一份做為篩選用\r\n      case 'setData':\r\n        return { data: action.data, dataCopy: action.data };\r\n      // 點選日期篩選資料\r\n      case 'filterData':\r\n        return { ...state, data: action.data };\r\n      // 點選合計將資料回復原來\r\n      case 'copyData':\r\n        return { ...state, data: state.dataCopy };\r\n\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    column: null,\r\n    data: [],\r\n    dataCopy: [],\r\n    direction: null,\r\n  });\r\n\r\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\r\n\r\n  const { column, data, direction, dataCopy } = state;\r\n  useEffect(() => {\r\n    let mm = '';\r\n    month >= 10 ? (mm = month) : (mm = '0' + month);\r\n    db.collection('balances')\r\n      .where('date', '>=', `2022-${mm}-01`)\r\n      .where('date', '<=', `2022-${mm}-31`)\r\n      // .where('date', 'startAt', '2022-07')\r\n      .where('user', '==', currentUser.email)\r\n      .get()\r\n      .then((snapshot) => {\r\n        const rows = snapshot.docs.map((doc) => {\r\n          return {\r\n            id: doc.id,\r\n            ...doc.data(),\r\n            // 將金額字串轉為數字才能正確做排序\r\n            expense: parseInt(doc.data().expense),\r\n          };\r\n        });\r\n        let filterdData = rows.filter(\r\n          (row) => row.expense > 0 && row.type !== '轉帳'\r\n        );\r\n        // 合計\r\n        let temp = 0;\r\n        filterdData.map((row) => {\r\n          temp += row.expense * 1;\r\n        });\r\n        setTotal(temp);\r\n\r\n        dispatch({ type: 'setData', data: filterdData, dataCopy: filterdData });\r\n      });\r\n  }, [month]);\r\n\r\n  function calTotal(arr) {\r\n    let total = 0;\r\n    arr.map((row) => {\r\n      total += row.expense * 1;\r\n    });\r\n\r\n    return total;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MonthButton\r\n        text={`${month} 月`}\r\n        onPlusClick={() => {\r\n          if (month == 12) setMonth(1);\r\n          else setMonth(month + 1);\r\n        }}\r\n        // 中間按鈕按下切換回當月\r\n        onClick={() => {\r\n          setMonth(new Date().getMonth() + 1);\r\n        }}\r\n      \r\n        onMinusClick={() => {\r\n          \r\n          if (month == 1) setMonth(12);\r\n          else setMonth(month - 1);\r\n        }}\r\n      ></MonthButton>\r\n\r\n      <Segment textAlign=\"center\">\r\n        <Statistic\r\n          color=\"blue\"\r\n          onClick={() => {\r\n            // console.log(data)\r\n            console.log(dataCopy);\r\n            dispatch({ type: 'copyData' });\r\n            setTotal(calTotal(dataCopy));\r\n          }}\r\n        >\r\n          <Statistic.Value>{numberFormat(total)}</Statistic.Value>\r\n          {/* <Statistic.Label>blue</Statistic.Label> */}\r\n        </Statistic>\r\n      </Segment>\r\n\r\n      <Table celled unstackable sortable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell\r\n              width={3}\r\n              // 顯示向上向下箭頭(sorted='ascending' || 'descending')\r\n              sorted={state.column === 'date' ? direction : null}\r\n              onClick={() => {\r\n                dispatch({ type: 'sort', column: 'date' });\r\n              }}\r\n            >\r\n              日期\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell\r\n              sorted={state.column === 'title' ? direction : null}\r\n              onClick={() => {\r\n                dispatch({ type: 'sort', column: 'title' });\r\n              }}\r\n            >\r\n              項目\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell\r\n              sorted={state.column === 'expense' ? direction : null}\r\n              onClick={() => {\r\n                dispatch({ type: 'sort', column: 'expense' });\r\n                console.log('d');\r\n              }}\r\n            >\r\n              支出\r\n            </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {data.map((row) => {\r\n            return (\r\n              <Table.Row key={row.id}>\r\n                <Table.Cell\r\n                  onClick={() => {\r\n                    let temp = data.filter((obj) => obj.date == row.date);\r\n\r\n                    dispatch({ type: 'filterData', data: temp });\r\n                    setTotal(calTotal(temp));\r\n                    // let total = 0;\r\n                    // temp.map((row) => {\r\n                    //   total += row.expense * 1;\r\n                    // });\r\n                    // setTotal(total);\r\n                  }}\r\n                >\r\n                  {row.date.slice(5, 10)}\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  {row.title ? row.title : <Label>{row.cate}</Label>}\r\n                </Table.Cell>\r\n                <Table.Cell>{row.expense}</Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n","import { compact, filter } from 'lodash';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  Table,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Modal,\r\n  Dropdown,\r\n  Grid,\r\n  GridRow,\r\n} from 'semantic-ui-react';\r\nimport { db } from '../../utils/firebase';\r\nexport default function Balances2() {\r\n  // 帳戶類別下拉資料\r\n  const [accountOptions, setAccountOptions] = useState([]);\r\n  const [cateOptions, setCateOptions] = useState([]);\r\n  // 記帳資料\r\n  const [rows, setRows] = useState([]);\r\n  // 查詢用\r\n  const [rowsCopy, setRowsCopy] = useState([]);\r\n\r\n  // 篩選條件\r\n  const [filters, setFilters] = useState({ title: '', account: '', cate:'' });\r\n\r\n  const handleFilters = (e, obj) => {\r\n    setFilters({\r\n      ...filters,\r\n      [obj.name]: obj.value,\r\n    });\r\n    // console.log(filters);\r\n  };\r\n\r\n  // 編輯列預設值\r\n  const defaultRow = {\r\n    date: new Date().toISOString().slice(0, 10),\r\n    title: '',\r\n    expense: '',\r\n    type: '一般',\r\n  };\r\n\r\n  // 編輯列\r\n  const [editedRow, setEditedRow] = useState(defaultRow);\r\n\r\n  // 記帳類型下拉資料\r\n  const types = [\r\n    { key: '1', text: '一般', value: '一般' },\r\n    { key: '2', text: '轉帳', value: '轉帳' },\r\n    { key: '3', text: '投資', value: '投資' },\r\n  ];\r\n\r\n  // 按鈕載入中圖示\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // 編輯視窗\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // 篩選月份\r\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\r\n\r\n  // const dbCol = db.collection('test');\r\n  const dbCol = db.collection('balances');\r\n\r\n  useEffect(() => {\r\n    getBalancesData();\r\n    getAccountsData();\r\n    getCatesData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setRows(\r\n      rowsCopy.filter(\r\n        (row) =>\r\n          row.account.name.includes(filters.account) &&\r\n          //  row.title?.toLowerCase().includes(filters.title?.toLowerCase())\r\n          row.title.includes(filters.title) &&\r\n          row.cate?.includes(filters.cate)\r\n      )\r\n    );\r\n\r\n    console.log(filters);\r\n    // setRows(\r\n    //   rowsCopy.filter((item) =>\r\n    //     Object.entries(filters).every(([key, value]) =>\r\n    //       item[key].includes(value)\r\n    //     )\r\n    //   )\r\n    // );\r\n  }, [filters]);\r\n\r\n  // 取得帳戶下拉資料\r\n  const getAccountsData = () => {\r\n    setLoading(true);\r\n    db.collection('accounts')\r\n      .where('user', '==', 'mkdodos@gmail.com')\r\n      .orderBy('prior')\r\n      .get()\r\n      .then((snapshot) => {\r\n        let data = snapshot.docs.map((doc) => {\r\n          return { key: doc.id, text: doc.data().name, value: doc.data().name };\r\n        });\r\n        // console.log(data);\r\n        setAccountOptions(data);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // 取得類別下拉資料\r\n  const getCatesData = () => {\r\n    setLoading(true);\r\n    db.collection('cates')\r\n      .where('user', '==', 'mkdodos@gmail.com')\r\n      .orderBy('prior')\r\n      .get()\r\n      .then((snapshot) => {\r\n        let data = snapshot.docs.map((doc) => {\r\n          return { key: doc.id, text: doc.data().name, value: doc.data().name };\r\n        });\r\n        // console.log(data);\r\n        setCateOptions(data);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // 取得記帳資料\r\n  const getBalancesData = () => {\r\n    setLoading(true);\r\n    dbCol\r\n      .where('date', '>=', `2022-0${month}-01`)\r\n      .where('date', '<=', `2022-0${month}-31`)\r\n      // .limit(20)\r\n      .get()\r\n      .then((snapshot) => {\r\n        let data = snapshot.docs.map((doc) => {\r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n        data = data.slice().reverse();\r\n        console.log(data);\r\n        setRows(data);\r\n        setRowsCopy(data);\r\n        setLoading(false);\r\n      });\r\n  };\r\n  // 表單輸入時,設定編輯列的值\r\n  const handleInputChange = (e) => {\r\n    setEditedRow({ ...editedRow, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // 儲存\r\n  const saveRow = () => {\r\n    setLoading(true);\r\n    // 用 id 判斷新增或更新\r\n    if (editedRow.id) {\r\n      dbCol\r\n        .doc(editedRow.id)\r\n        .update(editedRow)\r\n        .then(() => {\r\n          getBalancesData();\r\n          setEditedRow(defaultRow);\r\n          setOpen(false);\r\n        });\r\n    } else {\r\n      dbCol.add(editedRow).then(() => {\r\n        getBalancesData();\r\n        setEditedRow(defaultRow);\r\n        setOpen(false);\r\n      });\r\n    }\r\n\r\n    // console.log(editedRow.id)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={open}\r\n        closeIcon\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n      >\r\n        <Modal.Header>編輯</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>日期</label>\r\n              <input\r\n                name=\"date\"\r\n                type=\"date\"\r\n                placeholder=\"\"\r\n                value={editedRow.date}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>項目</label>\r\n              <input\r\n                name=\"title\"\r\n                type=\"text\"\r\n                value={editedRow.title}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>金額</label>\r\n              <input\r\n                name=\"expense\"\r\n                type=\"number\"\r\n                value={editedRow.expense}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Select\r\n              label=\"記帳類型\"\r\n              value={editedRow.type}\r\n              onChange={(e, obj) => {\r\n                setEditedRow({ ...editedRow, type: obj.value });\r\n              }}\r\n              name=\"types\"\r\n              options={types}\r\n            ></Form.Select>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button primary loading={loading} onClick={saveRow}>\r\n            儲存\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n\r\n      {/* 查詢 */}\r\n      <Grid>\r\n        <Grid.Row columns={3}>\r\n          <Grid.Column>\r\n            <Input\r\n              name=\"search\"\r\n              fluid\r\n              // value={search}\r\n              onChange={(e) => {\r\n                setFilters({ ...filters, title: e.target.value });\r\n              }}\r\n              placeholder=\"Search...\"\r\n            ></Input>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Dropdown\r\n              selection\r\n              clearable\r\n              options={accountOptions}\r\n              label=\"帳戶\"\r\n              onChange={(e, obj) => {\r\n                setFilters({ ...filters, account: obj.value });\r\n              }}\r\n            ></Dropdown>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Dropdown\r\n              selection\r\n              clearable\r\n              options={cateOptions}\r\n              label=\"類別\"\r\n              onChange={(e, obj) => {\r\n                setFilters({ ...filters, cate: obj.value });\r\n              }}\r\n            ></Dropdown>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n\r\n      <Table striped unstackable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell width={2}>日期</Table.HeaderCell>\r\n            <Table.HeaderCell width={1}>帳戶</Table.HeaderCell>\r\n            <Table.HeaderCell width={4}>項目</Table.HeaderCell>\r\n            <Table.HeaderCell width={2}>金額</Table.HeaderCell>\r\n            <Table.HeaderCell>記帳類型</Table.HeaderCell>\r\n            {/* <Table.HeaderCell>#</Table.HeaderCell> */}\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {rows.map((row) => {\r\n            return (\r\n              <Table.Row\r\n                key={row.id}\r\n                onClick={() => {\r\n                  setEditedRow(row);\r\n                  setOpen(true);\r\n                  console.log(row);\r\n                }}\r\n              >\r\n                <Table.Cell>{row.date}</Table.Cell>\r\n                <Table.Cell>{row.account.name}</Table.Cell>\r\n                <Table.Cell>{row.title}</Table.Cell>\r\n                <Table.Cell>{row.expense || row.income}</Table.Cell>\r\n                <Table.Cell>{row.type}</Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {Table} from  \"semantic-ui-react\"\r\nexport default function EmpBasic() {\r\n  const [rows, setRows] = useState([])\r\n  useEffect(()=>{\r\n\r\n    axios.get('http://localhost:8888/laravel5salary/public/emp/basic/data')\r\n    .then((res)=>{\r\n      setRows(res.data)\r\n      console.log(res.data)\r\n    })\r\n  },[])\r\n \r\n  return (\r\n    <>\r\n    <pre>{JSON.stringify(rows)}</pre>\r\n    {rows.map(row=>{\r\n      return <div key={row.name}>{row.name}</div>\r\n     \r\n    })}\r\n    </>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function Circle({num, active, onClick}) {\r\n\r\n  let style1 = {\r\n\t\tbackgroundColor: '#55d6be',\r\n    outline: 'none',\r\n\t\theight: '50px',\r\n    width:'50px',\r\n    borderRadius:'50%',\r\n    border: '1px solid white'\r\n\t};\r\n\r\n\r\n  let style2 = {\r\n\t\tbackgroundColor: '#fc6471',\r\n    outline: 'none',\r\n\t\theight: '50px',\r\n    width:'50px',\r\n    borderRadius:'50%',\r\n    border: '1px solid white'\r\n\t};\r\n\r\n  // style1.backgroundColor = '#fc6471'\r\n\r\n  \r\n\r\n  return (\r\n    <button style={active?style1:style2} onClick={onClick}>{num}\r\n      {/* <div style={styleNum}>{num}</div>       */}\r\n    </button>\r\n  )\r\n}\r\n","import '../components/Board.css'\r\n\r\nexport default function Board({score}) {\r\n  return (\r\n    <div className='score'><span className=\"score-text\">{score}</span></div>\r\n  )\r\n}\r\n","import { useState } from 'react';\r\nimport '../styles/List.css';\r\n\r\nexport default function List({ year, setYear, rows, setSelectedRow,onYearClick }) {\r\n  // const [active, setActive] = useState('');\r\n  return (\r\n    <div>\r\n     \r\n      <div className=\"wrapper\">\r\n        <table className='scores-table'>\r\n          <thead>\r\n            <tr>\r\n              <th>Year</th>\r\n              <th>Basic</th>\r\n              <th>Advance</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows.map((row) => {\r\n              return (\r\n                <tr key={row.id}\r\n                onClick={()=>onYearClick(row)}\r\n                  // onClick={() => {\r\n                  //   setYear(row.year);\r\n                  //   setSelectedRow(row)\r\n                    \r\n                  // }}\r\n                >\r\n                  <td className={year == row.year ? 'active' : ''}>{row.year}</td>\r\n                  <td>{row.basic}</td>\r\n                  <td>{row.advance}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n\r\n            {/* <tr\r\n            onClick={() => {\r\n              setYear(2018);\r\n            }}\r\n            >\r\n              <td className={year == '2018' ? 'active' : ''}>2018</td>\r\n              <td>120</td>\r\n              <td>72</td>\r\n            </tr> */}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Circle from './components/Circle';\r\nimport Board from './components/Board';\r\nimport { useEffect, useState } from 'react';\r\nimport { db } from '../../utils/firebase';\r\nimport { Loader } from 'semantic-ui-react';\r\nimport List from './components/List';\r\n\r\nexport default function Scores() {\r\n  const styleGrid = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(6, 50px)',\r\n    gridTemplateRows: 'repeat(4, 50px)',\r\n    gap: '5px',\r\n    justifyContent: 'center',\r\n    marginBottom: '20px'\r\n  };\r\n\r\n  const active = {\r\n    backgroundColor: '#fc6471',\r\n  };\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [rowDetails, setRowDetails] = useState([]);\r\n  const [rowDetailsBasic, setRowDetailsBasic] = useState([]);\r\n  const [rowDetailsAdvance, setRowDetailsAdvance] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [scoreAdvance, setScoreAdvance] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [seletedRow, setSelectedRow] = useState({});\r\n  const [year, setYear] = useState(0);\r\n\r\n  // 分數\r\n  const dbColScores = db.collection('scores');\r\n  // 分數明細\r\n  const dbColScoreDetails = db.collection('scoreDetails');\r\n\r\n  // 欄位\r\n  const schemaScores = {\r\n    // 年份 number\r\n    year: 2017,\r\n    // 基礎題分數 number\r\n    basic: 120,\r\n    // 進階題分數 number\r\n    advance: 80,\r\n  };\r\n\r\n  const schemaScoreDetails = {\r\n    // 年份 number\r\n    year: 2018,\r\n    // 題型 string ['basic','advance']\r\n    type: 'basic',\r\n    // 題號 number\r\n    sn: 1,\r\n    // 對錯 boolean\r\n    correct: true,\r\n  };\r\n\r\n  useEffect(() => {\r\n    for (let y = 2017; y < 2022; y++) {\r\n      // dbColScores.add({ ...schemaScores, year: y });\r\n      // for (let i = 1; i < 25; i++) {\r\n      //   dbColScoreDetails.add({ ...schemaScoreDetails, sn: i, year: y });\r\n      // }\r\n      // for (let i = 1; i < 11; i++) {\r\n      //   dbColScoreDetails.add({ ...schemaScoreDetails, sn: i, year: y,type:'advance' });\r\n      // }\r\n    }\r\n\r\n    // setLoading(true);\r\n\r\n    // dbColScores.get().then((snapshot) => {\r\n    //   snapshot.docs.map((doc) => {\r\n    //     dbColScores.doc(doc.id).delete();\r\n    //   });\r\n    // });\r\n\r\n    // dbColScoreDetails.get().then((snapshot) => {\r\n    //   snapshot.docs.map((doc) => {\r\n    //     dbColScoreDetails.doc(doc.id).delete();\r\n    //   });\r\n    // });\r\n\r\n    // 設定分數資料\r\n    dbColScores\r\n      .orderBy('year')\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc, index) => {\r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n\r\n        setRows(data);\r\n        \r\n      });\r\n  }, []);\r\n\r\n  // 年有變化時更新明細資料\r\n  useEffect(() => {\r\n    // 設定分數明細資料\r\n    dbColScoreDetails\r\n      .orderBy('sn')\r\n      .where('year', '==', year)\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n\r\n        // 計算分數\r\n        const basic = data.filter(row=>row.type==='basic')\r\n        setRowDetailsBasic(basic)\r\n        calTotal(basic);\r\n\r\n        const advance = data.filter(row=>row.type==='advance')\r\n        setRowDetailsAdvance(advance)\r\n        calScoreAdvance(advance);\r\n        // setRowDetails(data);\r\n        \r\n      });\r\n  }, [year]);\r\n\r\n  // 分數有變化時更新主表的分數\r\n  useEffect(() => {\r\n    const index = rows.indexOf(seletedRow);\r\n    if (index !== -1) {\r\n      dbColScores\r\n        .doc(seletedRow.id)\r\n        .update({ basic: score })\r\n        .then(() => {\r\n          let newScores = rows.slice();\r\n          Object.assign(newScores[index], { ...seletedRow, basic: score });\r\n          setRows(newScores);\r\n        });\r\n    }\r\n  }, [score]);\r\n\r\n\r\n  useEffect(() => {\r\n    const index = rows.indexOf(seletedRow);\r\n    if (index !== -1) {\r\n      dbColScores\r\n        .doc(seletedRow.id)\r\n        .update({ advance: scoreAdvance })\r\n        .then(() => {\r\n          let newScores = rows.slice();\r\n          Object.assign(newScores[index], { ...seletedRow, advance: scoreAdvance });\r\n          setRows(newScores);\r\n        });\r\n    }\r\n  }, [scoreAdvance]);\r\n\r\n  // 計算分數\r\n  const calTotal = (data) => {\r\n    let total = 0;\r\n    data.map((item) => {\r\n      if (item.correct) return (total += 5);\r\n      return total;\r\n    });\r\n    setScore(total);\r\n  };\r\n\r\n  // 計算分數\r\n  const calScoreAdvance = (data) => {\r\n    let total = 0;\r\n    data.map((item) => {\r\n      if (item.correct) return (total += 8);\r\n      return total;\r\n    });\r\n    setScoreAdvance(total);\r\n  };\r\n\r\n  // 點選明細球(計算分數, 更新該筆的對錯)\r\n  const onClick = (item) => {\r\n    dbColScoreDetails\r\n      .doc(item.id)\r\n      .update({ correct: !item.correct })\r\n      .then(() => {\r\n        if(item.type==='basic'){\r\n          let newRows = rowDetailsBasic.slice();\r\n          let row = item;\r\n          Object.assign(row, { ...row, correct: !row.correct });\r\n          setRowDetailsBasic(newRows);\r\n          calTotal(newRows);\r\n        }\r\n\r\n        if(item.type==='advance'){\r\n          let newRows = rowDetailsAdvance.slice();\r\n          let row = item;\r\n          Object.assign(row, { ...row, correct: !row.correct });\r\n          setRowDetailsAdvance(newRows);\r\n          calScoreAdvance(newRows);\r\n        }\r\n        \r\n      });\r\n  };\r\n\r\n  // 點選年\r\n  const onYearClick = (row) => {\r\n    setYear(row.year);\r\n    setSelectedRow(row);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {typeof year} */}\r\n      <List\r\n        year={year}\r\n        setYear={setYear}\r\n        rows={rows}\r\n        setSelectedRow={setSelectedRow}\r\n        onYearClick={onYearClick}\r\n      ></List>\r\n\r\n      {loading ? (\r\n        <Loader active inline=\"centered\" />\r\n      ) : (\r\n        <>\r\n          <Board score={score}></Board>\r\n          <div style={styleGrid}>\r\n            {rowDetailsBasic.map((item) => (\r\n              <Circle\r\n                onClick={() => onClick(item)}\r\n                active={item.correct}\r\n                key={item.id}\r\n                num={item.sn}\r\n              />\r\n            ))}\r\n          </div>\r\n\r\n          <Board score={scoreAdvance}></Board>\r\n          <div style={styleGrid}>\r\n            {rowDetailsAdvance.map((item) => (\r\n              <Circle\r\n                onClick={() => onClick(item)}\r\n                active={item.correct}\r\n                key={item.id}\r\n                num={item.sn}\r\n              />\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import Accounts from './Accounts'\r\n// import Cates from '../components/Cates'\r\nimport Cates from '../pages/Cates'\r\nimport TicTacToe from './TicTacToe'\r\nimport Balances from '../pages/Balances'\r\nimport EditCate from '../pages/Cates/components/EditCate'\r\n// import Balances from './Balances';\r\n\r\nimport Stocks from '../pages/Stocks'\r\nimport Books from './Books'\r\n\r\nimport ContactList from '../demo/contacts/ContactList';\r\nimport ViewContact from '../demo/contacts/ViewContact';\r\nimport AddContact from '../demo/contacts/AddContact';\r\n\r\nimport Login from './Login'\r\n\r\n\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport PrivateRoute from './PrivateRoute'\r\n\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  useHistory,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport Dashboard from './Dashboard'\r\nimport Balances2 from '../pages/Balances2/Balances2'\r\n\r\nimport EmpBasic from './EmpBasic'\r\n\r\nimport Scores from '../pages/Scores/Scores'\r\n\r\n\r\nexport default function Routes() {\r\n  const {currentUser} = useAuth()\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/scores\" exact component={Scores} />\r\n      <Route path=\"/balances2\" exact component={Balances2} />\r\n      <Route path=\"/accounts\">\r\n        <Accounts />\r\n      </Route>\r\n      <Route path=\"/cates\" exact component={Cates} />\r\n\r\n      <Route path=\"/emp-basic\" exact component={EmpBasic} />\r\n\r\n\r\n      <Route path={\"/cates/edit/:id\"} exact component={EditCate} />\r\n\r\n\r\n\r\n      <Route path=\"/tictactoe\" component={TicTacToe}/>\r\n      {/* <Route path=\"/balances\" component={Balances} /> */}\r\n      <PrivateRoute path=\"/balances\" exact component={Balances} />\r\n      {/* <Route path=\"/balances\">\r\n      {currentUser?<Balances/>:<Redirect to=\"login\" />}     \r\n      </Route> */}\r\n\r\n\r\n\r\n\r\n\r\n      <PrivateRoute path=\"/stocks\" component={Stocks} />\r\n      <Route path=\"/books\" component={Books} />\r\n\r\n      <Route path=\"/login\" exact component={Login} />\r\n      <Route path=\"/\" exact component={Balances} />\r\n      <PrivateRoute path=\"/dashboard\" exact component={Dashboard} />\r\n\r\n      <Route path=\"/contacts\" exact component={ContactList} />\r\n\r\n      <Route path=\"/contacts/add\" exact component={AddContact} />\r\n\r\n      <Route path={\"/contacts/view/:contactId\"} exact component={ViewContact} />\r\n\r\n      <Route path={\"/contacts/edit/:contactId\"} exact component={AddContact} />\r\n\r\n        \r\n     \r\n    </Switch>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Routes from './components/Routes';\r\nimport { Container } from 'semantic-ui-react';\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  useHistory,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport { AuthProvider } from './contexts/AuthContext';\r\n\r\n// import { AuthProvider } from '../contexts/AuthContext';\r\n\r\nimport ContactList from './demo/contacts/ContactList';\r\nimport CrudForm from './components/template/CrudForm';\r\n\r\nimport Spinner from './components/Spinner';\r\n\r\nimport Login from './pages/Login';\r\n\r\nexport default function App() {\r\n  // React.useEffect(()=>{\r\n  //   db.collection('accounts').add({name:'abc'})\r\n  // },[])\r\n  return (\r\n    <>\r\n      {/* <Login/> */}\r\n      {/* <Spinner/> */}\r\n      {/* <CrudForm/> */}\r\n\r\n      <AuthProvider>\r\n        <BrowserRouter>\r\n          <Header></Header>\r\n\r\n          {/* 路由 */}\r\n          <Container>\r\n            {/* <ContactList/> */}\r\n\r\n            <Routes />\r\n          </Container>\r\n        </BrowserRouter>\r\n      </AuthProvider>\r\n    </>\r\n  );\r\n}\r\n","import ReactDom from 'react-dom'\r\nimport App from './App';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nconst container = document.getElementById('root');\r\nReactDom.render(<App/>,container)"],"sourceRoot":""}