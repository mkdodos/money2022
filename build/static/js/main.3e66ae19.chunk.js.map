{"version":3,"sources":["utils/firebase.js","contexts/AuthContext.js","Header.js","components/DataRow.js","components/Accounts.js","components/AutoTable.js","components/Cates.js","components/TicTacToe.js","pages/Balances/components/ItemList.js","pages/Balances/components/EditForm.js","pages/Balances/components/Accounts.js","pages/Balances/index.js","components/AutoTableFirebase.js","pages/Stocks.js","contexts/BookContext.js","contexts/FirebaseBookContext.js","components/BookList.js","components/StockList.js","components/BookForm.js","services/ContactService.js","components/contacts/ContactList.js","components/Books.js","demo/contacts/ContactService.js","img/spin.gif","components/Spinner.js","demo/contacts/ContactList.js","demo/contacts/ViewContact.js","demo/contacts/AddContact.js","components/Login.js","components/Dashboard.js","components/Routes.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Header","activeItem","setActiveItem","history","useHistory","handleClick","e","name","push","Menu","secondary","pointing","Item","as","Link","to","onClick","active","position","Icon","DataRow","props","Table","Row","Cell","row","prior","balance","Accounts","defalutItem","rows","setRows","setRow","renderRow","i","handleChange","target","collection","orderBy","where","get","then","snapshot","docs","map","doc","data","id","Form","onSubmit","update","Group","Field","placeholder","onChange","type","Button","unstackable","text","obj","HeaderCell","Body","AutoTable","schema","itemList","setItemList","item","setItem","editedIndex","setEditedIndex","open","setOpen","collectionName","length","Modal","closeIcon","onClose","Content","Input","Actions","className","Date","now","slice","Object","assign","confirm","filter","edit","indexOf","MyTable","this","header","href","Component","Cates","Square","TicTacToe","state","squares","Array","fill","squaresCopy","setState","Grid","Column","renderSquare","ItemList","rowsCopy","setItemCopy","activeAccount","search","setSearch","title","toLowerCase","includes","handleEdit","date","Label","color","account","textAlign","income","circular","expense","EditForm","setRowsCopy","rowsAccount","setRowsAccount","setActiveAccount","itemCopy","dbCol","updateBalance","amt","index","newRows","floated","delete","primary","add","newItemList","accountClick","columns","Segment","inverted","Balances","toISOString","limit","Statistic","horizontal","Value","verticalAlign","dataRow","Stocks","qty","price","cost","FirebaseBookContext","FirebaseBookContextProvider","setBooks","books","editedBook","setEditedBook","removeBook","book","editBook","updateBook","saveBook","openForm","closeForm","BookList","author","console","log","NewBookForm","setTitle","setAuthor","ContactService","serverURL","ContactList","contacts","errorMessage","response","getAllContacts","JSON","stringify","Books","StockList","dataURL","axios","contactId","contact","post","put","Spinner","src","spinImg","style","width","ViewContact","useParams","getContact","AddContact","handleSave","UpdateContact","handleDelete","DeleteContact","Login","emailRef","useRef","passwordRef","setError","preventDefault","current","size","ref","defaultValue","basic","Dashboard","variant","Routes","path","component","exact","App","Container","container","document","getElementById","ReactDom","render"],"mappings":"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","file":"static/js/main.3e66ae19.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDUSJ5yzHvTCCSQTuONsPtOBGodjamReHc\",\r\n  authDomain: \"money2022-173b9.firebaseapp.com\",\r\n  projectId: \"money2022-173b9\",\r\n  storageBucket: \"money2022-173b9.appspot.com\",\r\n  messagingSenderId: \"944583877759\",\r\n  appId: \"1:944583877759:web:0fd8a43af8a727a76c0b4a\"\r\n};\r\n\r\nconst firebaseConfig_dada = {\r\n  apiKey: 'AIzaSyBKVsNm8RP9VKYBgEwmyRQsitx9dncLuaI',\r\n  authDomain: 'social-cool-f16ba.firebaseapp.com',\r\n  projectId: 'social-cool-f16ba',\r\n  storageBucket: 'social-cool-f16ba.appspot.com',\r\n  messagingSenderId: '578558980743',\r\n  appId: '1:578558980743:web:4668ba80e8df3c24087e22',\r\n};\r\n\r\n\r\n// const secondaryApp = firebase.initializeApp(secondaryAppConfig, \"secondary\");\r\n\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\n\r\nconst app_dada = firebase.initializeApp(firebaseConfig_dada,\"dada\");\r\nconst db_dada = app_dada.firestore();\r\n\r\n\r\nconst auth = app.auth();\r\n\r\n// export default firebase;\r\nexport { db,db_dada, auth };\r\n","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../utils/firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n      {/* {children} */}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React from 'react';\r\nimport {\r\n  Menu,\r\n  Icon,\r\n  Image,\r\n  Dropdown,\r\n  Container,\r\n  Sticky,\r\n} from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useAuth } from './contexts/AuthContext';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Header() {\r\n  const [activeItem, setActiveItem] = React.useState('');\r\n\r\n  const { currentUser, logout } = useAuth()\r\n\r\n  const history = useHistory();\r\n  function handleClick(e, { name }) {\r\n    setActiveItem(name);\r\n  }\r\n\r\n  async function handleLogout() {\r\n    // setError(\"\")\r\n\r\n    try {\r\n      await logout()\r\n      history.push(\"/login\")\r\n    } catch {\r\n      // setError(\"Failed to log out\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Menu secondary pointing>\r\n      {/* <Menu.Item as={Link} to=\"/tictactoe\">\r\n        TicTacToe\r\n      </Menu.Item> */}\r\n      <Menu.Item\r\n        as={Link}\r\n        to=\"/accounts\"\r\n        name=\"accounts\"\r\n        onClick={handleClick}\r\n        active={activeItem === 'accounts'}\r\n      >\r\n        帳戶\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        as={Link}\r\n        to=\"/cates\"\r\n        name=\"cates\"\r\n        onClick={handleClick}\r\n        active={activeItem === 'cates'}\r\n      >\r\n        類別\r\n      </Menu.Item>\r\n\r\n      <Menu.Item as={Link} to=\"/balances\"\r\n       name=\"balances\"\r\n       onClick={handleClick}\r\n       active={activeItem === 'balances'}\r\n      \r\n      >\r\n        收支\r\n      </Menu.Item>\r\n      <Menu.Item as={Link} to=\"/stocks\">\r\n        股票\r\n      </Menu.Item>\r\n      {/* <Menu.Item as={Link} to=\"/books\">\r\n        書本\r\n      </Menu.Item> */}\r\n      <Menu.Menu position=\"right\">\r\n        {currentUser ? (\r\n          <Menu.Item name=\"\" onClick={handleLogout}>\r\n            <Icon name=\"sign-out\" />\r\n          </Menu.Item>\r\n        ) : (\r\n          <Menu.Item name=\"login\" as={Link} to=\"/login\">\r\n            Login\r\n          </Menu.Item>\r\n        )}\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n}\r\n","import { Form, Button, Table } from \"semantic-ui-react\";\r\nexport default function DataRow(props) {\r\n  return (\r\n    <>\r\n      <Table.Row onClick={props.onClick}>\r\n        <Table.Cell> {props.row.name}</Table.Cell>\r\n        <Table.Cell> {props.row.prior}</Table.Cell>\r\n        <Table.Cell> {props.row.balance}</Table.Cell>\r\n      </Table.Row>\r\n    </>\r\n  );\r\n}\r\n","import { db, db_dada } from '../utils/firebase';\r\n// import {db as dada} from '../utils/firebase-dada'\r\nimport { Table, Form, Button } from 'semantic-ui-react';\r\nimport DataTable from './DataTable';\r\nimport DataRow from './DataRow';\r\nimport React from 'react';\r\nimport EditForm from './EditForm';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nexport default function Accounts() {\r\n  const {currentUser} = useAuth();\r\n  const schema = [\r\n    { text: '名稱', value: 'name', type: 'string' },\r\n    { text: '順序', value: 'prior', type: 'number' },\r\n    { text: '餘額', value: 'balance', type: 'number' },\r\n  ];\r\n  const defalutItem = { name: '', prior: '', balance: '' };\r\n  const [rows, setRows] = React.useState([]);\r\n  const [row, setRow] = React.useState(defalutItem);\r\n  React.useEffect(() => {\r\n    db.collection('accounts')\r\n    .orderBy('prior')\r\n    .where('user','==',currentUser.email)\r\n      .get()\r\n      .then((snapshot) => {\r\n        setRows(\r\n          snapshot.docs.map((doc) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          })\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  function handleSubmit() {\r\n    const { name, balance,prior } = row;\r\n    db.collection('accounts').doc(row.id).update({ name, balance, prior });\r\n    setRow(defalutItem)\r\n    // console.log(row);\r\n  }\r\n  function handleRowClick(row) {\r\n    console.log('row');\r\n  }\r\n\r\n  function handleClick(row) {\r\n    setRow(row);\r\n    // console.log(row);\r\n  }\r\n\r\n  function renderRow(row, i) {\r\n    return (\r\n      <DataRow key={i} row={row} value={i} onClick={() => handleClick(row)} />\r\n    );\r\n  }\r\n\r\n  function handleChange(e) {\r\n    setRow({ ...row, [e.target.name]: e.target.value });\r\n    // setRow({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Field>\r\n            <label>名稱</label>\r\n            <input\r\n              name=\"name\"\r\n              placeholder=\"First Name\"\r\n              value={row.name}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>順序</label>\r\n            <input\r\n            type=\"number\"\r\n              name=\"prior\"             \r\n              value={row.prior}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>餘額</label>\r\n            <input\r\n            type=\"number\"\r\n              name=\"balance\"\r\n              // placeholder=\"Last Name\"\r\n              value={row.balance}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Button type=\"submit\">Submit</Button>\r\n      </Form>\r\n\r\n      <Table unstackable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            {schema.map((obj, i) => (\r\n              <Table.HeaderCell key={i}>{obj.text}</Table.HeaderCell>\r\n            ))}\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {rows.map((row, i) => {\r\n            return renderRow(row, i);\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n\r\n      {/* <DataTable rows={rows} schema={schema} onRowClick={handleRowClick} /> */}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button, Table, Modal, Form, Input } from 'semantic-ui-react';\r\nimport {db} from \"../utils/firebase\"\r\nexport default function AutoTable(props) {\r\n  const defalutItem = props.defalutItem;\r\n  const schema = props.schema;\r\n  // const data = props.data;\r\n  // 資料陣列\r\n  const [itemList, setItemList] = React.useState([]);\r\n  // 資料列\r\n  const [item, setItem] = React.useState(defalutItem);\r\n  // 編輯列索引\r\n  const [editedIndex, setEditedIndex] = React.useState(-1);\r\n  // Modal\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  React.useEffect(()=>{\r\n    db.collection(props.collectionName).get().then((snapshot)=>{\r\n      const rows = snapshot.docs.map((doc)=>{\r\n        return {...doc.data(),id:doc.id}\r\n      })\r\n      setItemList(rows)\r\n    })\r\n  },[])\r\n\r\n\r\n  // CRUD\r\n  function handleEdit(obj) {\r\n    setOpen(true);\r\n    // 點選編輯列的索引,用來修改後,把值傳回該列\r\n    setEditedIndex(itemList.indexOf(obj));\r\n    setItem(obj);   \r\n  }\r\n\r\n  function handleUpdate() {\r\n    // 新增\r\n    if (editedIndex == -1) {\r\n      setItemList([...itemList, { ...item, id: Date.now() }]);\r\n    }\r\n    // 更新\r\n    else {\r\n      // 複製一份原資料陣列\r\n      const data = itemList.slice();\r\n      // 將編輯列的資料寫入\r\n      Object.assign(data[editedIndex], item);\r\n      // 設定更改後的資料陣列給原陣列\r\n      setItemList(data);\r\n      setEditedIndex(-1);\r\n    }\r\n\r\n    // 新增或更新完將表單輸入項的值清空\r\n    setItem(defalutItem);\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleDelete() {\r\n    if(!confirm('確定刪除嗎?'))\r\n    return;\r\n\r\n    const data = itemList.filter((obj) => obj.id !== item.id);\r\n    setItemList(data);\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <pre>{JSON.stringify(item)}</pre> */}\r\n      <pre>{itemList.length}</pre>\r\n      <Modal open={open} closeIcon onClose={() => setOpen(false)}>\r\n        <Modal.Header>編輯表單</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            {/* 表單 */}\r\n            {schema.map((obj, i) => {\r\n              return (\r\n                <Form.Field key={i}>\r\n                  <label>{obj.text}</label>\r\n                  <Input\r\n                    placeholder={obj.text}\r\n                    name={obj.name}\r\n                    value={item[obj.name]}\r\n                    type={obj.type}\r\n                    onChange={(e) => {\r\n                      setItem({ ...item, [e.target.name]: e.target.value });\r\n                    }}\r\n                  />\r\n                </Form.Field>\r\n              );\r\n            })}\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <button className=\"ui button blue\" onClick={handleUpdate}>\r\n            儲存\r\n          </button>\r\n          {editedIndex !== -1 && (\r\n            <button\r\n              className=\"ui button red left floated\"\r\n              onClick={handleDelete}\r\n            >\r\n              刪除\r\n            </button>\r\n          )}\r\n        </Modal.Actions>\r\n      </Modal>\r\n\r\n      <button\r\n        className=\"ui button\"\r\n        onClick={() => {\r\n          setOpen(true);\r\n          setItem(defalutItem);\r\n          setEditedIndex(-1);\r\n        }}\r\n      >\r\n        新增\r\n      </button>\r\n\r\n      <MyTable edit={handleEdit} schema={schema} rows={itemList} />\r\n    </>\r\n  );\r\n}\r\n\r\nclass MyTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Table unstackable>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              {/* 標題列 */}\r\n              {this.props.schema.map((header, i) => {\r\n                return (\r\n                  <Table.HeaderCell key={i}>{header.text}</Table.HeaderCell>\r\n                );\r\n              })}\r\n              <Table.HeaderCell>#</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {/* 資料列 */}\r\n            {this.props.rows.map((row, i) => {\r\n              return (\r\n                <tr key={i}>\r\n                  {/* 資料欄 */}\r\n                  {this.props.schema.map((obj, i) => {\r\n                    return <td key={i}>{row[obj.name]}</td>;\r\n                  })}\r\n                 \r\n                  <td onClick={() => this.props.edit(row)}>\r\n                    <a href=\"#\">編輯</a>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </Table.Body>\r\n        </Table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import AutoTable from \"./AutoTable\";\r\nimport {db} from \"../utils/firebase\"\r\nimport React from \"react\";\r\nexport default function Cates() {\r\n  // const [data, setData] = React.useState([])\r\n  // React.useEffect(()=>{\r\n  //   db.collection('cates').get().then((snapshot)=>{\r\n  //     const rows = snapshot.docs.map((doc)=>{\r\n  //       return doc.data()\r\n  //     })\r\n  //     setData(rows)\r\n  //   })\r\n  // },[])\r\n  const schema = [\r\n    // {\r\n    //   name: '欄位名稱',\r\n    //   text: '表格標題列欄位文字, 表單 placeholder 文字',\r\n    //   type: '表單輸入項類型',\r\n    // },\r\n    // {\r\n    //   name: 'date',\r\n    //   text: '日期',\r\n    //   type: 'date',\r\n    // },\r\n    // {\r\n    //   name: 'title',\r\n    //   text: '項目',\r\n    //   type: 'text',\r\n    // },\r\n    // {\r\n    //   name: 'expense',\r\n    //   text: '支出',\r\n    //   type: 'number',\r\n    // },\r\n    {\r\n      name: 'name',\r\n      text: '名稱',\r\n      type: 'text',\r\n    },\r\n    {\r\n      name: 'prior',\r\n      text: '順序',\r\n      type: 'number',\r\n    },\r\n   \r\n    \r\n  ];\r\n\r\n  const defalutItem = {\r\n    // date: new Date().toISOString().slice(0, 10),\r\n    // title: '',\r\n    // expense: '',\r\n    name: '',\r\n    prior:''\r\n    \r\n  };\r\n\r\n  return <AutoTable collectionName=\"cates\" schema={schema} defalutItem={defalutItem}  />\r\n}","import React from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\n\r\nclass Square extends React.Component {\r\n  // handleClick() {\r\n  //   console.log('this is class')\r\n  // }\r\n  render() {\r\n    return (\r\n      <button className=\"square\" onClick={this.props.onClick}>\r\n        {this.props.value}\r\n      </button>\r\n    );\r\n    // return (\r\n    //   <button className=\"square\" onClick={()=>this.handleClick()}>\r\n    //     {this.props.value}\r\n    //   </button>\r\n    // );\r\n  }\r\n}\r\n\r\n// function Square(props) {\r\n//   function handleClick() {\r\n//     console.log('this is square')\r\n//   }\r\n//   return (\r\n\r\n//       <button className='square'  onClick={handleClick}>\r\n//         {props.value}\r\n//       </button>\r\n\r\n//   );\r\n// }\r\n\r\nexport default class TicTacToe extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      squares: Array(9).fill(null),\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const squaresCopy = this.state.squares.slice();\r\n    squaresCopy[i] = 'X';\r\n    this.setState({\r\n      squares: squaresCopy,\r\n    });\r\n    // this.setState({ value: 'X' });\r\n  }\r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.state.squares[i]}\r\n        onClick={() => {\r\n          this.handleClick(i);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column>{this.renderSquare(0)}</Grid.Column>\r\n          <Grid.Column>{this.renderSquare(1)}</Grid.Column>\r\n          <Grid.Column>{this.renderSquare(2)}</Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column>{this.renderSquare(3)}</Grid.Column>\r\n          <Grid.Column>{this.renderSquare(4)}</Grid.Column>\r\n          <Grid.Column>{this.renderSquare(5)}</Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          {/* <Grid.Column>{this.renderSquare(6)}</Grid.Column> */}\r\n          <Grid.Column>{this.renderSquare(7)}</Grid.Column>\r\n          <Grid.Column>{this.renderSquare(8)}</Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import { db } from '../../../utils/firebase';\r\nimport DataTable from '../../../components/DataTable';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Table, Icon, Label, Header, Input } from 'semantic-ui-react';\r\n\r\nexport default function ItemList({\r\n  rows,\r\n  rowsCopy,\r\n  setRows,\r\n  setItem,\r\n  setItemCopy,\r\n  setEditedIndex,\r\n  setOpen,\r\n  activeAccount,\r\n}) {\r\n\r\n  const [search, setSearch] = useState('')\r\n  // const [rows, setRows] = React.useState([]);\r\n  const schema = [\r\n    { text: '日期', value: 'date', type: 'date' },\r\n    { text: '帳戶', value: 'account', type: 'map' },\r\n    { text: '類別', value: 'cate', type: 'string' },\r\n    { text: '項目', value: 'title', type: 'string' },\r\n    { text: '收入', value: 'income', type: 'number' },\r\n    { text: '支出', value: 'expense', type: 'number' },\r\n  ];\r\n\r\n  // React.useEffect(() => {\r\n  // axios.get('http://192.168.0.12:9000/balances').then(res=>{\r\n  //   setRows(res.data)\r\n  // })\r\n\r\n  function handleEdit(row) {\r\n    setItem(row);\r\n    setItemCopy(row)\r\n    setEditedIndex(rows.indexOf(row));\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleSearch(e) {\r\n    setSearch(e.target.value)\r\n    \r\n    // 要 toLowerCase 才能正確查詢\r\n    setRows(rowsCopy.filter(row=>row.title.toLowerCase().includes(e.target.value.toLowerCase())))\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {/* {search} */}\r\n    {/* {JSON.stringify(rows)} */}\r\n     <Input name=\"search\" value={search} onChange={handleSearch} placeholder=\"Search...\"></Input>\r\n      <Table unstackable>\r\n        {/* <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>日期</Table.HeaderCell>\r\n            <Table.HeaderCell>項目</Table.HeaderCell> \r\n            <Table.HeaderCell>金額</Table.HeaderCell>\r\n             <Table.HeaderCell>#</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header> */}\r\n        <Table.Body>\r\n          {rows.map((row) => {\r\n            return (\r\n              <Table.Row\r\n                key={row.id}\r\n                onClick={() => {\r\n                  handleEdit(row);\r\n                }}\r\n              >\r\n                <Table.Cell>\r\n                  <Header as=\"h4\">{row.title}</Header>\r\n                  <span>{row.date} </span>\r\n\r\n                  {!activeAccount && (\r\n                    <Label color=\"teal\">{row.account?.name}</Label>\r\n                  )}\r\n                </Table.Cell>\r\n                <Table.Cell textAlign=\"right\">\r\n                  {row.income ? (\r\n                    <Label color=\"teal\" circular>\r\n                      存\r\n                    </Label>\r\n                  ) : (\r\n                    <Label color=\"orange\" circular>\r\n                      提\r\n                    </Label>\r\n                  )}\r\n                  <br></br>$ {row.income ? row.income : row.expense + ''}\r\n                </Table.Cell>\r\n\r\n                {/* <Table.Cell>{row.date.slice(5,10)}</Table.Cell>\r\n                <Table.Cell>{row.title}</Table.Cell>\r\n                <Table.Cell>{row.expense}</Table.Cell>\r\n                <Table.Cell>{row.account?.name}</Table.Cell> */}\r\n                {/* <Table.Cell\r\n                  onClick={() => {\r\n                    handleEdit(row);\r\n                  }}\r\n                >\r\n                  <a href=\"#\">\r\n                    <Icon name=\"edit\" />\r\n                  </a>\r\n                </Table.Cell> */}\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n\r\n      {/* <DataTable rows={rows} schema={schema} /> */}\r\n    </>\r\n  );\r\n}\r\n","import { Form, Button, Modal } from 'semantic-ui-react';\r\nimport { useState } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { db } from '../../../utils/firebase';\r\nimport { useAuth } from '../../../contexts/AuthContext';\r\nconst EditForm = ({\r\n  rows,\r\n  setRows,\r\n  rowsCopy,\r\n  setRowsCopy,\r\n  rowsAccount,\r\n  setRowsAccount,\r\n  item,\r\n  setItem,\r\n  editedIndex,\r\n  defalutItem,\r\n  setEditedIndex,\r\n  open,\r\n  setOpen,\r\n  setActiveAccount,\r\n  activeAccount,\r\n  itemCopy,\r\n}) => {\r\n  const { currentUser } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  // 表單輸入時,設定 item 的值\r\n  const handleChange = (e) => {\r\n    setItem({ ...item, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const dbCol = db.collection('balances');\r\n  function saveItem() {\r\n    if (editedIndex == -1) {\r\n      setLoading(true);\r\n      dbCol\r\n        .add({ ...item, user: currentUser.email, account: activeAccount })\r\n        .then((doc) => {\r\n          const row = {\r\n            ...item,\r\n            id: doc.id,\r\n            user: currentUser.email,\r\n            account: activeAccount,\r\n          };\r\n          setRows([row, ...rows]);\r\n          setRowsCopy([row, ...rowsCopy]);\r\n          setLoading(false);\r\n          setEditedIndex(-1);\r\n          setItem(defalutItem);\r\n          setOpen(false);\r\n\r\n          // 更新帳額餘額\r\n          let amt = activeAccount.balance - item.expense * 1;\r\n          updateBalance(amt);\r\n        });\r\n    } else {\r\n      setLoading(true);\r\n      dbCol\r\n        .doc(item.id)\r\n        .update(item)\r\n        .then(() => {\r\n          // 更新帳額餘額\r\n          let amt =\r\n            activeAccount.balance - item.expense * 1 + itemCopy.expense * 1;\r\n          updateBalance(amt);\r\n\r\n          // 先更新帳戶餘額再做表格更新,才會正常\r\n          let newItemList = rows.slice();\r\n          Object.assign(newItemList[editedIndex], item);\r\n          setRows(newItemList);\r\n\r\n          setLoading(false);\r\n          setEditedIndex(-1);\r\n          setItem(defalutItem);\r\n          setOpen(false);\r\n        });\r\n    }\r\n\r\n    // console.log(activeAccount);\r\n    // setRowsAccount()\r\n    // setActiveAccount(function (prev) {\r\n\r\n    //   // 原來的帳戶陣列資料也要更新,在點選時才能顯示更新後資料\r\n    //   let amt = prev.balance - item.expense * 1\r\n    //   const accounts = rowsAccount.slice();\r\n    //   Object.assign(accounts[accounts.indexOf(prev)],{ ...prev, balance: amt })\r\n\r\n    //   setRowsAccount(accounts)\r\n    //   // 新增支出\r\n    //   // 修改支出\r\n    //   // 刪除支出\r\n    //   db.collection('accounts')\r\n    //     .doc(activeAccount.id)\r\n    //     .update({ balance: amt });\r\n\r\n    //   return { ...prev, balance: amt };\r\n    // });\r\n\r\n    // setActiveAccount\r\n  }\r\n\r\n  function updateBalance(amt) {\r\n    // 更新帳戶餘額\r\n    db.collection('accounts').doc(activeAccount.id).update({ balance: amt });\r\n    const index = rowsAccount.indexOf(activeAccount);\r\n    const newRows = rowsAccount.slice();\r\n    Object.assign(newRows[index], { ...activeAccount, balance: amt });\r\n    setRowsAccount(newRows);\r\n  }\r\n  const handleDelete = () => {\r\n    setLoading(true);\r\n    dbCol\r\n      .doc(item.id)\r\n      .delete()\r\n      .then(() => {\r\n        setRows(rows.filter((obj) => obj.id !== item.id));\r\n        setRowsCopy(rowsCopy.filter((obj) => obj.id !== item.id));\r\n        setEditedIndex(-1);\r\n        setItem(defalutItem);\r\n        setOpen(false);\r\n        setLoading(false);\r\n\r\n        let amt = activeAccount.balance + item.expense * 1;\r\n        updateBalance(amt);\r\n\r\n        // setActiveAccount(function (prev) {\r\n        //   let amt = prev.balance + item.expense * 1\r\n\r\n        //   // 刪除支出\r\n        //   db.collection('accounts')\r\n        //   .doc(activeAccount.id)\r\n        //   .update({ balance: amt });\r\n\r\n        //   return { ...prev, balance: amt };\r\n        // });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {itemCopy.expense} */}\r\n      {/* <pre>{JSON.stringify(itemCopy)}</pre> */}\r\n\r\n      <Modal\r\n        open={open}\r\n        closeIcon\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n      >\r\n        <Modal.Header>編輯表單</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>日期</label>\r\n              <input\r\n                name=\"date\"\r\n                type=\"date\"\r\n                placeholder=\"\"\r\n                value={item.date}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>項目</label>\r\n              <input\r\n                name=\"title\"\r\n                placeholder=\"\"\r\n                value={item.title}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>金額</label>\r\n              <input\r\n                name=\"expense\"\r\n                type=\"number\"\r\n                placeholder=\"\"\r\n                value={item.expense}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          {editedIndex > -1 && (\r\n            <Button\r\n              loading={loading}\r\n              floated=\"left\"\r\n              color=\"red\"\r\n              onClick={handleDelete}\r\n            >\r\n              Delete\r\n            </Button>\r\n          )}\r\n\r\n          <Button loading={loading} floated=\"right\" primary onClick={saveItem}>\r\n            Save\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditForm;\r\n","import { Grid, Segment } from 'semantic-ui-react';\r\nimport { useState, useEffect } from 'react';\r\nimport { db } from '../../../utils/firebase';\r\n\r\nimport { useAuth } from '../../../contexts/AuthContext';\r\n\r\nconst Accounts = ({rows, accountClick, activeAccount}) => {\r\n  const { currentUser } = useAuth();\r\n  // const [topAccounts, setTopAccounts] = useState([]);\r\n  // 選取帳戶\r\n  // const [activeAccount, setActiveAccount] = useState();\r\n  // useEffect(() => {\r\n  //   db.collection('accounts')\r\n  //     .where('user', '==', currentUser.email)\r\n  //     .limit(3)\r\n  //     .get()\r\n  //     .then((snapshot) => {\r\n  //       const data = snapshot.docs.map((doc) => {\r\n  //         return { ...doc.data(), id: doc.id };\r\n  //       });\r\n  //       setTopAccounts(data);\r\n  //     });\r\n  // }, []);\r\n\r\n  return (\r\n    <Grid columns={3}>\r\n      {rows.map((row, i) => (\r\n        <Grid.Column key={row.id}>\r\n          <Segment\r\n            textAlign=\"center\"\r\n            color=\"teal\"\r\n            // 點選反白\r\n            inverted={activeAccount?.name === row.name}\r\n            onClick={() => {\r\n              accountClick(row);\r\n            }}\r\n          >\r\n            {row.name}\r\n          </Segment>\r\n        </Grid.Column>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Accounts;\r\n","import ItemList from './components/ItemList';\r\nimport EditForm from './components/EditForm';\r\nimport Accounts from './components/Accounts';\r\nimport { useState, useEffect } from 'react';\r\nimport { db, auth } from '../../utils/firebase';\r\nimport { Button, Grid, Header, Statistic } from 'semantic-ui-react';\r\n\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst Balances = () => {\r\n  const { currentUser, logout } = useAuth();\r\n\r\n  // const user = auth.currentUser;\r\n  // console.log(user)\r\n\r\n  // 顯示 Modal\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // 資料陣列\r\n  const [rows, setRows] = useState([]);\r\n\r\n  // 提供給篩選用的資料陣列,才不會因為篩選變動了原陣列\r\n  const [rowsCopy, setRowsCopy] = useState([]);\r\n\r\n  // 帳戶資料\r\n  const [rowsAccount, setRowsAccount] = useState([]);\r\n\r\n  const [activeAccount, setActiveAccount] = useState();\r\n\r\n  const defalutItem = {\r\n    date: new Date().toISOString().slice(0, 10),\r\n    title: '',\r\n    expense: '',\r\n  };\r\n\r\n  // 單筆資料\r\n  const [item, setItem] = useState(defalutItem);\r\n\r\n  // 點選時編輯時,複製一份單筆資料,做為儲存時計算帳戶餘額之用\r\n  const [itemCopy, setItemCopy] = useState(defalutItem);\r\n\r\n  const [editedIndex, setEditedIndex] = useState(-1);\r\n\r\n  // const [item, setItem] = useState({});\r\n\r\n  useEffect(() => {\r\n    // axios.get('http://192.168.0.12:9000/balances').then(res=>{\r\n    //   setRows(res.data)\r\n    // })\r\n\r\n    // console.log(currentUser?.uid)\r\n    let dbCol = db.collection('balances').orderBy('date', 'desc').limit(300);\r\n    if (currentUser) dbCol = dbCol.where('user', '==', currentUser?.email);\r\n\r\n    dbCol.get().then((snapshot) => {\r\n      // console.log(snapshot.size);\r\n      const data = snapshot.docs.map((doc) => {\r\n        return { ...doc.data(), id: doc.id };\r\n      });\r\n      setRows(data);\r\n      setRowsCopy(data);\r\n    });\r\n\r\n    db.collection('accounts')\r\n      .where('user', '==', currentUser.email)\r\n      .orderBy('prior')\r\n      .limit(3)\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n        setRowsAccount(data);\r\n      });\r\n  }, []);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    setItem(defalutItem);\r\n  };\r\n\r\n  const handleAccountClick = (account) => {\r\n    setActiveAccount(account);\r\n    setRows(\r\n      rowsCopy.filter((row) => row.account && row.account.name == account.name)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <pre>{JSON.stringify(itemCopy)}</pre> */}\r\n\r\n      {/* {JSON.stringify(activeAccount?.balance)} */}\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Accounts\r\n              rows={rowsAccount}\r\n              activeAccount={activeAccount}\r\n              accountClick={handleAccountClick}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n\r\n      {activeAccount && (\r\n        <Grid columns={2}>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              {/* <Header>{rows.length}</Header> */}\r\n\r\n              <Statistic horizontal>\r\n                <Statistic.Value>{activeAccount?.balance}</Statistic.Value>\r\n              </Statistic>\r\n            </Grid.Column>\r\n            <Grid.Column verticalAlign=\"middle\">\r\n              <Button onClick={handleOpen} floated=\"right\" color=\"yellow\">\r\n                ADD\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      )}\r\n\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <ItemList\r\n              setOpen={setOpen}\r\n              rows={rows}\r\n              rowsCopy={rowsCopy}\r\n              setRows={setRows}\r\n              item={item}\r\n              setItem={setItem}\r\n              setItemCopy={setItemCopy}\r\n              setEditedIndex={setEditedIndex}\r\n              activeAccount={activeAccount}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n\r\n      {/* {JSON.stringify(item)} */}\r\n      <EditForm\r\n        defalutItem={defalutItem}\r\n        rows={rows}\r\n        setRows={setRows}\r\n        setRowsCopy={setRowsCopy}\r\n        rowsCopy={rowsCopy}\r\n        rowsAccount={rowsAccount}\r\n        setRowsAccount={setRowsAccount}\r\n        item={item}\r\n        setItem={setItem}\r\n        editedIndex={editedIndex}\r\n        setEditedIndex={setEditedIndex}\r\n        open={open}\r\n        setOpen={setOpen}\r\n        setActiveAccount={setActiveAccount}\r\n        activeAccount={activeAccount}\r\n        itemCopy={itemCopy}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Balances;\r\n","import React from 'react';\r\nimport { Button, Table, Modal, Form, Input } from 'semantic-ui-react';\r\nimport { db } from '../utils/firebase';\r\nexport default function AutoTable(props) {\r\n  const defalutItem = props.defalutItem;\r\n  const schema = props.schema;\r\n  // const data = props.data;\r\n  // 資料陣列\r\n  const [itemList, setItemList] = React.useState([]);\r\n  // 資料列\r\n  const [item, setItem] = React.useState(defalutItem);\r\n  // 編輯列索引\r\n  const [editedIndex, setEditedIndex] = React.useState(-1);\r\n  // Modal\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const dbCol = db.collection(props.collectionName);\r\n\r\n  React.useEffect(() => {\r\n    dbCol.get().then((snapshot) => {\r\n      const rows = snapshot.docs.map((doc) => {\r\n        return { ...doc.data(), id: doc.id };\r\n      });\r\n      setItemList(rows);\r\n    });\r\n  }, []);\r\n\r\n  // CRUD\r\n  function handleEdit(obj) {\r\n    setOpen(true);\r\n    // 點選編輯列的索引,用來修改後,把值傳回該列\r\n    setEditedIndex(itemList.indexOf(obj));\r\n    setItem(obj);\r\n  }\r\n\r\n  function handleUpdate() {\r\n    // 新增\r\n    if (editedIndex == -1) {\r\n      const row = { ...item, id: Date.now() };\r\n      dbCol.add(row);\r\n      setItemList([...itemList, row]);\r\n    }\r\n    // 更新\r\n    else {\r\n      dbCol.doc(item.id).update(item);\r\n\r\n      // 複製一份原資料陣列\r\n      const data = itemList.slice();\r\n      // 將編輯列的資料寫入\r\n\r\n      Object.assign(data[editedIndex], item);\r\n      // 設定更改後的資料陣列給原陣列\r\n      setItemList(data);\r\n      setEditedIndex(-1);\r\n    }\r\n\r\n    // 新增或更新完將表單輸入項的值清空\r\n    setItem(defalutItem);\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleDelete() {\r\n    if (!confirm('確定刪除嗎?')) return;\r\n\r\n    dbCol.doc(item.id).delete();\r\n    const data = itemList.filter((obj) => obj.id !== item.id);\r\n    setItemList(data);\r\n    setOpen(false);\r\n  }\r\n\r\n  \r\n  return (\r\n    <>\r\n      {/* <pre>{JSON.stringify(item)}</pre> */}\r\n      {/* <pre>{editedIndex}</pre> */}\r\n      <Modal open={open} closeIcon onClose={() => setOpen(false)}>\r\n        <Modal.Header>編輯表單</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            {/* 表單 */}\r\n            {schema.map((obj, i) => {\r\n              return (\r\n                <Form.Field key={i}>\r\n                  <label>{obj.text}</label>\r\n                  <Input\r\n                    placeholder={obj.text}\r\n                    name={obj.name}\r\n                    value={item[obj.name]}\r\n                    type={obj.type}\r\n                    onChange={(e) => {\r\n                      setItem({ ...item, [e.target.name]: e.target.value });\r\n                    }}\r\n                  />\r\n                </Form.Field>\r\n              );\r\n            })}\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <button className=\"ui button blue\" onClick={handleUpdate}>\r\n            儲存\r\n          </button>\r\n          {editedIndex !== -1 && (\r\n            <button\r\n              className=\"ui button red left floated\"\r\n              onClick={handleDelete}\r\n            >\r\n              刪除\r\n            </button>\r\n          )}\r\n        </Modal.Actions>\r\n      </Modal>\r\n\r\n      <button\r\n        className=\"ui button\"\r\n        onClick={() => {\r\n          setOpen(true);\r\n          setItem(defalutItem);\r\n          setEditedIndex(-1);\r\n        }}\r\n      >\r\n        新增\r\n      </button>\r\n\r\n      <MyTable edit={handleEdit} schema={schema} rows={itemList} dataRow={props.dataRow}  />\r\n    </>\r\n  );\r\n}\r\n\r\nclass MyTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Table unstackable>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              {/* 標題列 */}\r\n              {this.props.schema.map((header, i) => {\r\n                return (\r\n                  <Table.HeaderCell key={i}>{header.text}</Table.HeaderCell>\r\n                );\r\n              })}\r\n              <Table.HeaderCell>#</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {/* 資料列 */}\r\n            {this.props.rows.map((row, i) => {\r\n              return (\r\n                <tr key={i}>\r\n                  {/* 資料欄(自訂或預設) */}\r\n                  {this.props.dataRow\r\n                    ? this.props.dataRow\r\n                    : this.props.schema.map((obj, i) => {\r\n                        return <td key={i}>{row[obj.name]}</td>;\r\n                      })}\r\n\r\n                  <td onClick={() => this.props.edit(row)}>\r\n                    <a href=\"#\">編輯</a>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </Table.Body>\r\n        </Table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import AutoTableFirebase from '../components/AutoTableFirebase';\r\nexport default function Stocks() {\r\n  const schema = [\r\n    { name: 'name', text: '名稱', type: 'text' },\r\n    { name: 'qty', text: '股數', type: 'number' },\r\n    { name: 'price', text: '現價', type: 'number' },\r\n    { name: 'cost', text: '成本', type: 'number' }\r\n  ];\r\n  const defalutItem = {\r\n    name:'',\r\n    qty:'',\r\n    price:'',\r\n    cost:''\r\n  }\r\n\r\n  // 自訂資料欄\r\n  let dataRow = schema.map((obj, i) => {\r\n    return <td key={i}>A</td>;    \r\n  })\r\n  // console.log(dataRow)\r\n  // dataRow=[...dataRow]\r\n  const collectionName = 'stocks'\r\n  return <AutoTableFirebase schema={schema} defalutItem={defalutItem}\r\n  collectionName={collectionName} \r\n  />;\r\n}\r\n","import React, { createContext, useState } from 'react';\r\n// import uuid from 'uuid';\r\n\r\nexport const BookContext = createContext();\r\n\r\nconst BookContextProvider = (props) => {\r\n  // 資料陣列\r\n  const [books, setBooks] = useState([\r\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n    .then(response => response.json())\r\n    .then(json => console.log(json))\r\n  ]);\r\n\r\n  // 資料列預設值\r\n  const defalutItem = {\r\n    title: '',\r\n    author: '',\r\n  };\r\n  // 編輯列\r\n  const [editedBook, setEditedBook] = useState(defalutItem);\r\n  // 編輯列索引\r\n  const [editedIndex, setEditedIndex] = useState(-1);\r\n  // 視窗開關\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // 開啟編輯視窗\r\n  const openForm = () => {\r\n    setEditedIndex(-1);\r\n    setEditedBook(defalutItem);\r\n    setOpen(true);\r\n  };\r\n\r\n  // 刪除列\r\n  const removeBook = (id) => {\r\n    setBooks(books.filter((book) => book.id !== id));\r\n  };\r\n\r\n  // 按下表格的編輯列\r\n  const editBook = (book) => {\r\n    setEditedBook(book);\r\n    setEditedIndex(books.indexOf(book));\r\n    setOpen(true);\r\n  };\r\n\r\n  // 表單輸入時 onChange\r\n  const updateBook = (book) => {\r\n    setEditedBook(book);\r\n  };\r\n\r\n  // 儲存資料\r\n  const saveBook = (book) => {\r\n    // 新增或修改\r\n    if (editedIndex == -1) {\r\n      setBooks([...books, { ...book, id: Date.now() }]);\r\n    } else {\r\n      const data = books.slice();\r\n      Object.assign(data[editedIndex], book);\r\n      setBooks(data);\r\n    }\r\n    // 預設值\r\n    setEditedBook(defalutItem);\r\n    setEditedIndex(-1);\r\n    // 視窗關閉\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <BookContext.Provider\r\n      value={{\r\n        books,\r\n        editedBook,\r\n        open,\r\n        removeBook,\r\n        editBook,\r\n        updateBook,\r\n        saveBook,\r\n        openForm,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BookContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BookContextProvider;\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport { db } from '../utils/firebase';\r\n\r\nexport const FirebaseBookContext = createContext();\r\n\r\nconst FirebaseBookContextProvider = (props) => {\r\n  const dbCol = db.collection(props.collectionName)\r\n  useEffect(() => {\r\n    dbCol\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n        setBooks(data);\r\n      });\r\n  }, []);\r\n\r\n  // 資料陣列\r\n  const [books, setBooks] = useState([]);\r\n\r\n  // 資料列預設值\r\n  const defalutItem = {\r\n    name: '',\r\n    price: '',\r\n  };\r\n  // 編輯列\r\n  const [editedBook, setEditedBook] = useState(defalutItem);\r\n  // 編輯列索引\r\n  const [editedIndex, setEditedIndex] = useState(-1);\r\n  // 視窗開關\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // 開啟編輯視窗\r\n  const openForm = () => {\r\n    setEditedIndex(-1);\r\n    setEditedBook(defalutItem);\r\n    setOpen(true);\r\n  };\r\n\r\n  // 關閉編輯視窗\r\n  const closeForm = () => {\r\n    setEditedIndex(-1);\r\n    setEditedBook(defalutItem);\r\n    setOpen(false);\r\n  };\r\n\r\n  // 刪除列\r\n  const removeBook = (id) => {\r\n    dbCol.doc(id).delete()\r\n    setBooks(books.filter((book) => book.id !== id));\r\n  };\r\n\r\n  // 按下表格的編輯列\r\n  const editBook = (book) => {\r\n    setEditedBook(book);\r\n    setEditedIndex(books.indexOf(book));\r\n    setOpen(true);\r\n  };\r\n\r\n  // 表單輸入時 onChange\r\n  const updateBook = (book) => {\r\n    setEditedBook(book);\r\n  };\r\n\r\n  // 儲存資料\r\n  const saveBook = (book) => {\r\n    // 新增或修改\r\n    if (editedIndex == -1) {\r\n      // const row = { ...book, id: Date.now() }\r\n      dbCol.add(book).then((doc)=>{\r\n        setBooks([...books, { ...book, id: doc.id } ]);\r\n      })\r\n      \r\n    } else {\r\n      dbCol.doc(book.id).update(book)\r\n      const data = books.slice();\r\n      Object.assign(data[editedIndex], book);\r\n      setBooks(data);\r\n    }\r\n    // 預設值\r\n    setEditedBook(defalutItem);\r\n    setEditedIndex(-1);\r\n    // 視窗關閉\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <FirebaseBookContext.Provider\r\n      value={{\r\n        books,\r\n        editedBook,\r\n        open,\r\n        removeBook,\r\n        editBook,\r\n        updateBook,\r\n        saveBook,\r\n        openForm,\r\n        closeForm\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FirebaseBookContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FirebaseBookContextProvider;\r\n","import { useContext } from 'react';\r\n// import { BookContext } from '../contexts/BookContext';\r\nimport { FirebaseBookContext } from '../contexts/FirebaseBookContext';\r\nimport { Table, Header, Button } from 'semantic-ui-react';\r\n\r\nconst BookList = () => {\r\n  const { editBook, books, removeBook, openForm } =\r\n    useContext(FirebaseBookContext);\r\n  const handleOpen = () => {\r\n    // console.log('open');\r\n    openForm();\r\n  };\r\n  return (\r\n    <>\r\n      <Header>{books.length}</Header>\r\n      <Button onClick={handleOpen}>ADD</Button>\r\n      <Table unstackable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>書名</Table.HeaderCell>\r\n            <Table.HeaderCell>作者</Table.HeaderCell>            \r\n            <Table.HeaderCell>#</Table.HeaderCell>\r\n            <Table.HeaderCell>#</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {books.map((book) => {\r\n            return (\r\n              <Table.Row key={book.id}>\r\n                <Table.Cell>{book.title}</Table.Cell>\r\n                <Table.Cell>{book.author}</Table.Cell>               \r\n                <Table.Cell\r\n                  onClick={() => {\r\n                    removeBook(book.id);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Table.Cell>\r\n                <Table.Cell\r\n                  onClick={() => {\r\n                    editBook(book);\r\n                  }}\r\n                >\r\n                  Edit\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BookList;\r\n","import { useContext } from 'react';\r\n// import { BookContext } from '../contexts/BookContext';\r\nimport { FirebaseBookContext } from '../contexts/FirebaseBookContext';\r\nimport { Table, Header, Button } from 'semantic-ui-react';\r\n\r\nconst BookList = () => {\r\n  const { editBook, books, removeBook, openForm } =\r\n    useContext(FirebaseBookContext);\r\n  const handleOpen = () => {\r\n    console.log('open');\r\n    openForm();\r\n  };\r\n  return (\r\n    <>\r\n      <Header>{books.length}</Header>\r\n      <Button onClick={handleOpen}>ADD</Button>\r\n      <Table unstackable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>書名</Table.HeaderCell>\r\n            <Table.HeaderCell>作者</Table.HeaderCell>\r\n            <Table.HeaderCell>Qty</Table.HeaderCell>\r\n            <Table.HeaderCell>#</Table.HeaderCell>\r\n            <Table.HeaderCell>#</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {books.map((book) => {\r\n            return (\r\n              <Table.Row key={book.id}>\r\n                <Table.Cell>{book.name}</Table.Cell>\r\n                <Table.Cell>{book.price}</Table.Cell>\r\n                <Table.Cell>{book.qty}</Table.Cell>\r\n                <Table.Cell\r\n                  onClick={() => {\r\n                    removeBook(book.id);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Table.Cell>\r\n                <Table.Cell\r\n                  onClick={() => {\r\n                    editBook(book);\r\n                  }}\r\n                >\r\n                  Edit\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BookList;\r\n","import { useContext, useState } from 'react';\r\nimport { FirebaseBookContext } from '../contexts/FirebaseBookContext';\r\nimport { Form, Input, Button, Modal } from 'semantic-ui-react';\r\nconst NewBookForm = () => {\r\n  const { editedBook, updateBook, saveBook, open, closeForm } =\r\n    useContext(FirebaseBookContext);\r\n  const [title, setTitle] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  \r\n\r\n  const handleUpdate = () => {\r\n    updateBook(editedBook, title);\r\n    setTitle('');\r\n    setAuthor('');\r\n  };\r\n\r\n  const handleSave = () => {\r\n    saveBook(editedBook);\r\n    setTitle('');\r\n    setAuthor('');\r\n  };\r\n\r\n  const updateInput = (e) => {\r\n    updateBook({\r\n      ...editedBook,\r\n      [e.target.name]: e.target.value,\r\n    });  \r\n  }\r\n  return (\r\n    <>\r\n      <Modal open={open}\r\n      closeIcon\r\n      onClose={closeForm}\r\n      >\r\n        <Modal.Header>\r\n          編輯\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>Title</label>\r\n              <Input\r\n                placeholder=\"book title\"\r\n                name=\"price\"\r\n                value={editedBook.price}\r\n                // value={editedBook['title']}\r\n                type=\"text\"\r\n                onChange={updateInput}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Author</label>\r\n              <Input\r\n                placeholder=\"book author\"\r\n                name=\"author\"\r\n                value={editedBook.author}\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  updateBook({\r\n                    ...editedBook,\r\n                    [e.target.name]: e.target.value,\r\n                  });                 \r\n                }}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n\r\n          \r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n            <Button onClick={handleSave}>Update</Button>\r\n          </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewBookForm;\r\n","import axios from \"axios\";\r\nimport { db } from \"../utils/firebase\";\r\nexport class ContactService {\r\n\r\n  static serverURL = `http://localhost:9000`;\r\n  static getAllContacts() {\r\n    let data = [];\r\n    db.collection('cates').get().then(snapshot=>{\r\n     \r\n      snapshot.docs.map(doc=>{\r\n        data.push({...doc.data()})\r\n        // return {...doc.data(), id:doc.id}\r\n      })\r\n     \r\n    })\r\n    return data;     \r\n    \r\n    // return ['a','b']\r\n    // return axios.get(`${this.serverURL}/money`)\r\n  }\r\n  \r\n}","import { ContactService } from '../../services/ContactService';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst ContactList = () => {\r\n  const [state, setState] = useState({\r\n    loading: false,\r\n    contacts: [],\r\n    errorMessage: '',\r\n  });\r\n  useEffect( () => {\r\n    setState({ ...state, loading: false });\r\n    const response =  ContactService.getAllContacts();\r\n    setState({ ...state, loading: false, contacts: response });\r\n    console.log(response);\r\n  }, []);\r\n\r\n  const { contacts } = state;\r\n  return <pre>{JSON.stringify(contacts)}</pre>;\r\n};\r\n\r\nexport default ContactList;\r\n","// import React, { useContext } from 'react';\r\nimport BookContextProvider from '../contexts/BookContext';\r\nimport BookList from '../components/BookList';\r\nimport StockList from '../components/StockList';\r\nimport FirebaseBookContextProvider from '../contexts/FirebaseBookContext';\r\n\r\nimport NewBookForm from './BookForm';\r\n\r\nimport FakeData from './FakeData';\r\nimport ContactList from './contacts/ContactList';\r\n// import  from '../contexts/BookContext';\r\n\r\nconst Books = () => {\r\n  return (\r\n    <>\r\n      {/* <FakeData /> */}\r\n      <ContactList/>\r\n      <FirebaseBookContextProvider collectionName=\"stocks\">\r\n        <NewBookForm />\r\n        <StockList />\r\n      </FirebaseBookContextProvider>\r\n      <FirebaseBookContextProvider collectionName=\"books\">\r\n        <NewBookForm />\r\n        <BookList />\r\n      </FirebaseBookContextProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Books;\r\n","import axios from \"axios\"\r\nimport { db } from \"../../utils/firebase\"\r\n// server 資料處理\r\nexport class ContactService {\r\n  static serverURL = \"http://192.168.0.12:9000\"\r\n  \r\n  // \r\n  static getAllContacts() {\r\n    let dataURL=`${this.serverURL}/contacts`\r\n    return axios.get(dataURL)\r\n  }\r\n\r\n  static getContact(contactId) {\r\n    let dataURL=`${this.serverURL}/contacts/${contactId}`\r\n    return axios.get(dataURL)\r\n  }\r\n\r\n  static AddContact(contact) {\r\n    let dataURL=`${this.serverURL}/contacts`\r\n    return axios.post(dataURL,contact)\r\n  }\r\n\r\n  static UpdateContact(contact) {\r\n    let dataURL=`${this.serverURL}/contacts/${contact.id}`\r\n    return axios.put(dataURL,contact)\r\n  }\r\n\r\n  static DeleteContact(contactId) {\r\n    let dataURL=`${this.serverURL}/contacts/${contactId}`\r\n    return axios.delete(dataURL)\r\n  }\r\n\r\n  // static getAllCates() {\r\n  //   return db.collection('cates').get()\r\n  // }\r\n}","export default __webpack_public_path__ + \"static/media/spin.0d8837f6.gif\";","import spinImg from '../img/spin.gif'\r\n\r\nexport default function Spinner() {\r\n  return (\r\n<div className=\"ui basic segment\">\r\n<img src={spinImg} className=\"ui centered medium image\" style={{width:'100px'}} />\r\n</div>\r\n\r\n    \r\n  )\r\n}","// React Contact Manager App\r\n// https://www.youtube.com/watch?v=ZfqnUm7w6ig&t=5031\r\n// 搭配 json server\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { ContactService } from './ContactService';\r\nimport { Table, Button } from 'semantic-ui-react';\r\nimport Spinner from '../../components/Spinner';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ContactList = () => {\r\n  let [state, setState] = useState({\r\n    loading: false,\r\n    contacts: [],\r\n  });\r\n\r\n  // useEffect(async () => {\r\n  //   let response = await ContactService.getAllCates().then((snapshot) => {\r\n  //     const data = snapshot.docs.map((doc) => {\r\n  //       console.log(snapshot.size);\r\n  //       return doc.data();\r\n  //     });\r\n  //     setState({ ...state, contacts: data });\r\n  //   });\r\n  // }, []);\r\n\r\n  // axios 有不同寫法\r\n  useEffect(async () => {\r\n    setState({ ...state, loading: true });\r\n    let response = await axios.get('http://192.168.0.12:9000/contacts');\r\n    setState({ ...state, loading: false, contacts: response.data });\r\n    //   setTimeout(function(){\r\n\r\n    // },1000);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   axios.get('http://192.168.0.12:9000/contacts').then((response) => {\r\n  //     setState({ ...state, contacts: response.data });\r\n  //   });\r\n  // }, []);\r\n\r\n  // useEffect(async () => {\r\n  //   let response = await ContactService.getAllContacts();\r\n  //   setState({ ...state, contacts: response.data });\r\n  // }, []);\r\n\r\n  const { contacts, loading } = state;\r\n  return (\r\n    <>\r\n      {/* <pre>{JSON.stringify(state.contacts)}</pre> */}\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <>\r\n          <Button><Link to={'/contacts/add'}>ADD</Link></Button>\r\n          <Table unstackable>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell>名稱</Table.HeaderCell>\r\n                <Table.HeaderCell>金額</Table.HeaderCell>\r\n                <Table.HeaderCell>#</Table.HeaderCell>\r\n                <Table.HeaderCell>#</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              {contacts.map((item) => {\r\n                return (\r\n                  <Table.Row key={item.id}>\r\n                    <Table.Cell>{item.name}</Table.Cell>\r\n                    <Table.Cell>{item.amt}</Table.Cell>\r\n\r\n                    <Table.Cell                     \r\n                    >\r\n                       <Link to={`/contacts/edit/${item.id}`}>Edit</Link>\r\n                    </Table.Cell>\r\n\r\n                    <Table.Cell>\r\n                      <Link to={`/contacts/view/${item.id}`}>View</Link>\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                );\r\n              })}\r\n            </Table.Body>\r\n          </Table>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { ContactService } from \"./ContactService\";\r\n\r\nexport default function ViewContact() {\r\n  let {contactId} = useParams()\r\n  useEffect(async()=>{\r\n    let response = await ContactService.getContact(contactId);\r\n    console.log(response.data)\r\n  },[])\r\n  return (\r\n    <div>\r\n      {contactId}\r\n    </div>\r\n  );\r\n}","import { Form, Button } from 'semantic-ui-react';\r\nimport { useEffect, useState } from 'react';\r\nimport { ContactService } from './ContactService';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nexport default function AddContact() {\r\n  const history = useHistory()\r\n  const {contactId} = useParams()\r\n  const defalutItem = {\r\n    name: '',\r\n    amt: '',\r\n  };\r\n\r\n  useEffect(async()=>{\r\n    if(!contactId)\r\n    return \r\n    const response = await ContactService.getContact(contactId)\r\n    // console.log(contact)\r\n    setItem(response.data)\r\n  },[])\r\n\r\n  // 單筆資料\r\n  const [item, setItem] = useState(defalutItem);\r\n\r\n  // 表單輸入時,設定 item 的值\r\n  const handleChange = (e) => {\r\n    setItem({ ...item, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if(contactId)\r\n     await ContactService.UpdateContact(item)\r\n    else\r\n     await ContactService.AddContact(item)\r\n    \r\n    history.push('/contacts')\r\n    console.log('save');\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if(contactId)\r\n    await ContactService.DeleteContact(item.id)      \r\n    history.push('/contacts')\r\n   \r\n  };\r\n\r\n  return (\r\n    <>\r\n      {' '}\r\n      <Form onSubmit={handleSave}>\r\n        <Form.Field>\r\n          <label>名稱</label>\r\n          <input\r\n            name=\"name\"\r\n            placeholder=\"\"\r\n            value={item.name}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>金額</label>\r\n          <input\r\n            name=\"amt\"\r\n            placeholder=\"\"\r\n            value={item.amt}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Button type='submit'\r\n          primary          \r\n        >\r\n          Save\r\n        </Button>\r\n\r\n       \r\n      </Form>\r\n\r\n\r\n      <Button \r\n         floated='right'\r\n         onClick={handleDelete}         \r\n        >\r\n          Delete\r\n        </Button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card } from 'semantic-ui-react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const { login } = useAuth();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError('');\r\n      setLoading(true);\r\n      await login(emailRef.current.value, passwordRef.current.value);\r\n      history.push('/balances');\r\n    } catch {\r\n      setError('Failed to log in');\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form size=\"large\" onSubmit={handleSubmit}>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input ref={emailRef} defaultValue=\"mkdodos@gmail.com\"></input>\r\n          {/* <input ref={emailRef} ></input> */}\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input ref={passwordRef} defaultValue=\"123456\"></input>\r\n          {/* <input ref={passwordRef} ></input> */}\r\n        </Form.Field>\r\n        <Button type=\"submit\" size=\"large\" color=\"blue\">\r\n          Mark\r\n        </Button>\r\n      </Form>\r\n\r\n      <Button\r\n        basic\r\n        floated=\"right\"\r\n        onClick={async () => {\r\n          await login('dada@gmail.com', '123456');\r\n          history.push('/balances');\r\n        }}\r\n        size=\"large\"\r\n        color=\"blue\"\r\n      >\r\n        Dada\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\"\r\n// import { Card, Button, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { Button } from \"semantic-ui-react\"\r\n\r\nexport default function Dashboard() {\r\n  const [error, setError] = useState(\"\")\r\n  const { currentUser, logout } = useAuth()\r\n  const history = useHistory()\r\n\r\n  async function handleLogout() {\r\n    setError(\"\")\r\n\r\n    try {\r\n      await logout()\r\n      history.push(\"/login\")\r\n    } catch {\r\n      setError(\"Failed to log out\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div>Dashboard</div>\r\n    <strong>Email:</strong> {currentUser?.email}\r\n    <Button variant=\"link\" onClick={handleLogout}>\r\n          Log Out\r\n        </Button>\r\n      {/* <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Profile</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <strong>Email:</strong> {currentUser.email}\r\n          <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\r\n            Update Profile\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        \r\n      </div> */}\r\n    </>\r\n  )\r\n}","import Accounts from '../components/Accounts'\r\nimport Cates from '../components/Cates'\r\nimport TicTacToe from '../components/TicTacToe'\r\nimport Balances from '../pages/Balances'\r\n\r\n// import Balances from './Balances';\r\n\r\nimport Stocks from '../pages/Stocks'\r\nimport Books from '../components/Books'\r\n\r\nimport ContactList from '../demo/contacts/ContactList';\r\nimport ViewContact from '../demo/contacts/ViewContact';\r\nimport AddContact from '../demo/contacts/AddContact';\r\n\r\nimport Login from './Login'\r\n\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  useHistory,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport Dashboard from './Dashboard'\r\nexport default function Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/accounts\">\r\n        <Accounts />\r\n      </Route>\r\n      <Route path=\"/cates\" component={Cates} />\r\n      <Route path=\"/tictactoe\" component={TicTacToe}/>\r\n      <Route path=\"/balances\" component={Balances} />\r\n      <Route path=\"/stocks\" component={Stocks} />\r\n      <Route path=\"/books\" component={Books} />\r\n\r\n      <Route path=\"/login\" exact component={Login} />\r\n      <Route path=\"/\" exact component={Dashboard} />\r\n      <Route path=\"/dashboard\" exact component={Dashboard} />\r\n\r\n      <Route path=\"/contacts\" exact component={ContactList} />\r\n\r\n      <Route path=\"/contacts/add\" exact component={AddContact} />\r\n\r\n      <Route path={\"/contacts/view/:contactId\"} exact component={ViewContact} />\r\n\r\n      <Route path={\"/contacts/edit/:contactId\"} exact component={AddContact} />\r\n\r\n        \r\n     \r\n    </Switch>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Routes from './components/Routes';\r\nimport { Container } from 'semantic-ui-react';\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  useHistory,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport { AuthProvider } from './contexts/AuthContext';\r\n\r\nimport ContactList from './demo/contacts/ContactList';\r\nimport CrudForm from './components/template/CrudForm';\r\n\r\nimport Spinner from './components/Spinner';\r\n\r\nimport Login from './pages/Login';\r\n\r\nexport default function App() {\r\n  // React.useEffect(()=>{\r\n  //   db.collection('accounts').add({name:'abc'})\r\n  // },[])\r\n  return (\r\n    <>\r\n      {/* <Login/> */}\r\n      {/* <Spinner/> */}\r\n      {/* <CrudForm/> */}\r\n\r\n      <AuthProvider>\r\n        <BrowserRouter>\r\n          <Header></Header>\r\n\r\n          {/* 路由 */}\r\n          <Container>\r\n            {/* <ContactList/> */}\r\n\r\n            <Routes />\r\n          </Container>\r\n        </BrowserRouter>\r\n      </AuthProvider>\r\n    </>\r\n  );\r\n}\r\n","import ReactDom from 'react-dom'\r\nimport App from './App';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nconst container = document.getElementById('root');\r\nReactDom.render(<App/>,container)"],"sourceRoot":""}